-- ****************************************
-- DO NOT EDIT
-- This file was automatically generated by the Impulse C Compiler.
-- 
-- Impulse C is Copyright 2002-2009, Impulse Accelerated Technologies, Inc.
-- 
-- Stage Master is Copyright 2002-2009, Green Mountain Computing Systems, Inc.
-- 
-- All rights reserved.
-- 
-- ****************************************


-- TARGET: VHDL
    
library ieee;
use ieee.std_logic_1164.all;

package external_components is
end package;
library ieee;
use ieee.std_logic_1164.all;
use ieee.std_logic_arith.all;

entity g_SBox_RAM is
  port (
    rst,clk : in std_ulogic;
    we : in std_ulogic;
    addr : in std_ulogic_vector(7 downto 0);
    addr2 : in std_ulogic_vector(7 downto 0);
    din : in std_ulogic_vector(7 downto 0);
    dout : out std_ulogic_vector(7 downto 0);
    dout2 : out std_ulogic_vector(7 downto 0)
  );
end g_SBox_RAM;

architecture dualsync of g_SBox_RAM is
  type memtype is array (0 to 255) of
    std_ulogic_vector(7 downto 0);
  constant mem : memtype := (
X"63",X"7c",X"77",X"7b",
X"f2",X"6b",X"6f",X"c5",
X"30",X"01",X"67",X"2b",
X"fe",X"d7",X"ab",X"76",
X"ca",X"82",X"c9",X"7d",
X"fa",X"59",X"47",X"f0",
X"ad",X"d4",X"a2",X"af",
X"9c",X"a4",X"72",X"c0",
X"b7",X"fd",X"93",X"26",
X"36",X"3f",X"f7",X"cc",
X"34",X"a5",X"e5",X"f1",
X"71",X"d8",X"31",X"15",
X"04",X"c7",X"23",X"c3",
X"18",X"96",X"05",X"9a",
X"07",X"12",X"80",X"e2",
X"eb",X"27",X"b2",X"75",
X"09",X"83",X"2c",X"1a",
X"1b",X"6e",X"5a",X"a0",
X"52",X"3b",X"d6",X"b3",
X"29",X"e3",X"2f",X"84",
X"53",X"d1",X"00",X"ed",
X"20",X"fc",X"b1",X"5b",
X"6a",X"cb",X"be",X"39",
X"4a",X"4c",X"58",X"cf",
X"d0",X"ef",X"aa",X"fb",
X"43",X"4d",X"33",X"85",
X"45",X"f9",X"02",X"7f",
X"50",X"3c",X"9f",X"a8",
X"51",X"a3",X"40",X"8f",
X"92",X"9d",X"38",X"f5",
X"bc",X"b6",X"da",X"21",
X"10",X"ff",X"f3",X"d2",
X"cd",X"0c",X"13",X"ec",
X"5f",X"97",X"44",X"17",
X"c4",X"a7",X"7e",X"3d",
X"64",X"5d",X"19",X"73",
X"60",X"81",X"4f",X"dc",
X"22",X"2a",X"90",X"88",
X"46",X"ee",X"b8",X"14",
X"de",X"5e",X"0b",X"db",
X"e0",X"32",X"3a",X"0a",
X"49",X"06",X"24",X"5c",
X"c2",X"d3",X"ac",X"62",
X"91",X"95",X"e4",X"79",
X"e7",X"c8",X"37",X"6d",
X"8d",X"d5",X"4e",X"a9",
X"6c",X"56",X"f4",X"ea",
X"65",X"7a",X"ae",X"08",
X"ba",X"78",X"25",X"2e",
X"1c",X"a6",X"b4",X"c6",
X"e8",X"dd",X"74",X"1f",
X"4b",X"bd",X"8b",X"8a",
X"70",X"3e",X"b5",X"66",
X"48",X"03",X"f6",X"0e",
X"61",X"35",X"57",X"b9",
X"86",X"c1",X"1d",X"9e",
X"e1",X"f8",X"98",X"11",
X"69",X"d9",X"8e",X"94",
X"9b",X"1e",X"87",X"e9",
X"ce",X"55",X"28",X"df",
X"8c",X"a1",X"89",X"0d",
X"bf",X"e6",X"42",X"68",
X"41",X"99",X"2d",X"0f",
X"b0",X"54",X"bb",X"16");
  signal raddr: unsigned(7 downto 0);
  signal raddr2: unsigned(7 downto 0);
begin
  writemem: process (clk)
  begin
    if (clk'event and clk='1') then
      raddr <= unsigned(addr);
      raddr2 <= unsigned(addr2);
    end if;
  end process;

  dout <= mem(conv_integer(raddr));
  dout2 <= mem(conv_integer(raddr2));
end dualsync;

library ieee;
use ieee.std_logic_1164.all;

entity g_SBox is
  port (signal reset : in std_ulogic;
    signal sclk : in std_ulogic;
    signal clk : in std_ulogic;
    signal dout0 : out std_ulogic_vector (7 downto 0);
    signal raddr0 : in std_ulogic_vector (7 downto 0));
end g_SBox;

use work.external_components.all;
architecture rtl of g_SBox is
  function mkvec(b : in std_ulogic) return std_ulogic_vector is
    variable res : std_ulogic_vector(0 downto 0);
  begin
    res(0):=b;
    return(res);
  end;

  component g_SBox_RAM is
    port (signal rst : in std_ulogic;
      signal clk : in std_ulogic;
      signal we : in std_ulogic;
      signal addr : in std_ulogic_vector (7 downto 0);
      signal addr2 : in std_ulogic_vector (7 downto 0);
      signal din : in std_ulogic_vector (7 downto 0);
      signal dout : out std_ulogic_vector (7 downto 0);
      signal dout2 : out std_ulogic_vector (7 downto 0));
  end component;

begin
  ram0: g_SBox_RAM
    port map (
      rst => reset, 
      clk => clk, 
      we => '0', 
      addr => raddr0, 
      dout => dout0, 
      din => X"00", 
      addr2 => X"00");

end rtl;
library ieee;
use ieee.std_logic_1164.all;
use ieee.std_logic_arith.all;

entity AESproc_state_RAM is
  port (
    rst,clk : in std_ulogic;
    we : in std_ulogic;
    addr : in std_ulogic_vector(3 downto 0);
    addr2 : in std_ulogic_vector(3 downto 0);
    din : in std_ulogic_vector(7 downto 0);
    dout : out std_ulogic_vector(7 downto 0);
    dout2 : out std_ulogic_vector(7 downto 0)
  );
end AESproc_state_RAM;

architecture dualsync of AESproc_state_RAM is
  type memtype is array (0 to 15) of
    std_ulogic_vector(7 downto 0);
  signal mem : memtype;
  signal raddr: unsigned(3 downto 0);
  signal raddr2: unsigned(3 downto 0);
begin
  writemem: process (clk)
  begin
    if (clk'event and clk='1') then
      if (we = '1') then
        mem(conv_integer(unsigned(addr))) <= din;
      end if;
      raddr <= unsigned(addr);
      raddr2 <= unsigned(addr2);
    end if;
  end process;

  dout <= mem(conv_integer(raddr));
  dout2 <= mem(conv_integer(raddr2));
end dualsync;

library ieee;
use ieee.std_logic_1164.all;
use ieee.std_logic_arith.all;

entity AESproc_stateTemp_RAM is
  port (
    rst,clk : in std_ulogic;
    we : in std_ulogic;
    addr : in std_ulogic_vector(3 downto 0);
    addr2 : in std_ulogic_vector(3 downto 0);
    din : in std_ulogic_vector(7 downto 0);
    dout : out std_ulogic_vector(7 downto 0);
    dout2 : out std_ulogic_vector(7 downto 0)
  );
end AESproc_stateTemp_RAM;

architecture dualsync of AESproc_stateTemp_RAM is
  type memtype is array (0 to 15) of
    std_ulogic_vector(7 downto 0);
  signal mem : memtype;
  signal raddr: unsigned(3 downto 0);
  signal raddr2: unsigned(3 downto 0);
begin
  writemem: process (clk)
  begin
    if (clk'event and clk='1') then
      if (we = '1') then
        mem(conv_integer(unsigned(addr))) <= din;
      end if;
      raddr <= unsigned(addr);
      raddr2 <= unsigned(addr2);
    end if;
  end process;

  dout <= mem(conv_integer(raddr));
  dout2 <= mem(conv_integer(raddr2));
end dualsync;

library ieee;
use ieee.std_logic_1164.all;
use ieee.std_logic_arith.all;

entity AESproc_expandedKey_RAM is
  port (
    rst,clk : in std_ulogic;
    we : in std_ulogic;
    addr : in std_ulogic_vector(7 downto 0);
    addr2 : in std_ulogic_vector(7 downto 0);
    din : in std_ulogic_vector(7 downto 0);
    dout : out std_ulogic_vector(7 downto 0);
    dout2 : out std_ulogic_vector(7 downto 0)
  );
end AESproc_expandedKey_RAM;

architecture dualsync of AESproc_expandedKey_RAM is
  type memtype is array (0 to 175) of
    std_ulogic_vector(7 downto 0);
  signal mem : memtype;
  signal raddr: unsigned(7 downto 0);
  signal raddr2: unsigned(7 downto 0);
begin
  writemem: process (clk)
  begin
    if (clk'event and clk='1') then
      if (we = '1') then
        mem(conv_integer(unsigned(addr))) <= din;
      end if;
      raddr <= unsigned(addr);
      raddr2 <= unsigned(addr2);
    end if;
  end process;

  dout <= mem(conv_integer(raddr));
  dout2 <= mem(conv_integer(raddr2));
end dualsync;

library ieee;
use ieee.std_logic_1164.all;
use ieee.std_logic_arith.all;

entity AESproc_key_RAM is
  port (
    rst,clk : in std_ulogic;
    we : in std_ulogic;
    addr : in std_ulogic_vector(3 downto 0);
    addr2 : in std_ulogic_vector(3 downto 0);
    din : in std_ulogic_vector(31 downto 0);
    dout : out std_ulogic_vector(31 downto 0);
    dout2 : out std_ulogic_vector(31 downto 0)
  );
end AESproc_key_RAM;

architecture dualsync of AESproc_key_RAM is
  type memtype is array (0 to 15) of
    std_ulogic_vector(31 downto 0);
  signal mem : memtype;
  signal raddr: unsigned(3 downto 0);
  signal raddr2: unsigned(3 downto 0);
begin
  writemem: process (clk)
  begin
    if (clk'event and clk='1') then
      if (we = '1') then
        mem(conv_integer(unsigned(addr))) <= din;
      end if;
      raddr <= unsigned(addr);
      raddr2 <= unsigned(addr2);
    end if;
  end process;

  dout <= mem(conv_integer(raddr));
  dout2 <= mem(conv_integer(raddr2));
end dualsync;

library ieee;
use ieee.std_logic_1164.all;

library impulse;
use impulse.components.all;
    
entity AESproc is
  port (signal reset : in std_ulogic;
    signal sclk : in std_ulogic;
    signal clk : in std_ulogic;
    signal p_AESinputSignal_en : inout std_ulogic;
    signal p_AESinputSignal_rdy : in std_ulogic;
    signal p_AESinputSignal_data : in std_ulogic_vector (31 downto 0);
    signal p_AESdataStream_rdy : in std_ulogic;
    signal p_AESdataStream_en : inout std_ulogic;
    signal p_AESdataStream_eos : in std_ulogic;
    signal p_AESdataStream_data : in std_ulogic_vector (7 downto 0);
    signal p_AESoutputStream_rdy : in std_ulogic;
    signal p_AESoutputStream_en : inout std_ulogic;
    signal p_AESoutputStream_eos : out std_ulogic;
    signal p_AESoutputStream_data : out std_ulogic_vector (7 downto 0);
    signal p_SBox_din : in std_ulogic_vector (7 downto 0);
    signal p_SBox_raddr : out std_ulogic_vector (7 downto 0));
end AESproc;

use work.external_components.all;
architecture rtl of AESproc is
  function mkvec(b : in std_ulogic) return std_ulogic_vector is
    variable res : std_ulogic_vector(0 downto 0);
  begin
    res(0):=b;
    return(res);
  end;

  component AESproc_state_RAM is
    port (signal rst : in std_ulogic;
      signal clk : in std_ulogic;
      signal we : in std_ulogic;
      signal addr : in std_ulogic_vector (3 downto 0);
      signal addr2 : in std_ulogic_vector (3 downto 0);
      signal din : in std_ulogic_vector (7 downto 0);
      signal dout : out std_ulogic_vector (7 downto 0);
      signal dout2 : out std_ulogic_vector (7 downto 0));
  end component;

  component AESproc_stateTemp_RAM is
    port (signal rst : in std_ulogic;
      signal clk : in std_ulogic;
      signal we : in std_ulogic;
      signal addr : in std_ulogic_vector (3 downto 0);
      signal addr2 : in std_ulogic_vector (3 downto 0);
      signal din : in std_ulogic_vector (7 downto 0);
      signal dout : out std_ulogic_vector (7 downto 0);
      signal dout2 : out std_ulogic_vector (7 downto 0));
  end component;

  component AESproc_expandedKey_RAM is
    port (signal rst : in std_ulogic;
      signal clk : in std_ulogic;
      signal we : in std_ulogic;
      signal addr : in std_ulogic_vector (7 downto 0);
      signal addr2 : in std_ulogic_vector (7 downto 0);
      signal din : in std_ulogic_vector (7 downto 0);
      signal dout : out std_ulogic_vector (7 downto 0);
      signal dout2 : out std_ulogic_vector (7 downto 0));
  end component;

  component AESproc_key_RAM is
    port (signal rst : in std_ulogic;
      signal clk : in std_ulogic;
      signal we : in std_ulogic;
      signal addr : in std_ulogic_vector (3 downto 0);
      signal addr2 : in std_ulogic_vector (3 downto 0);
      signal din : in std_ulogic_vector (31 downto 0);
      signal dout : out std_ulogic_vector (31 downto 0);
      signal dout2 : out std_ulogic_vector (31 downto 0));
  end component;

  type stateType is (init, b0s0, b1s0, b1s1, b1s2, b2s0, b3s0, b3s1, b4s0, b4s1, b4s2, b5s0, b6s0, b7s0, b8s0, b9s0, b10s0, b11s0, b11s1, b12s0, b13s0, b14s0, b15s0, b16s0, b16s1, b17s0, b18s0, b19s0, b20s0, b20s1, b20s2, b20s3, b20s4, b20s5, b20s6, b20s7, b20s8, b20s9, b20s10, b20s11, b20s12, b20s13, b20s14, b20s15, b20s16, b20s17, b20s18, b20s19, b20s20, b20s21, b20s22, b20s23, b20s24, b20s25, b20s26, b20s27, b20s28, b20s29, b20s30, b20s31, b20s32, b20s33, b20s34, b20s35, b20s36, b20s37, b20s38, b20s39, b20s40, b20s41, b20s42, b20s43, b21s0, b22s0, b22s1, b23s0, b24s0, b25s0, b25s1, b26s0, b27s0, b28s0, b28s1, b28s2, b28s3, b29s0, b30s0, b31s0, b31s1, b32s0, b33s0, b34s0, b34s1, b34s2, b34s3, b35s0, b36s0, b37s0, b37s1, b38s0, b39s0, b40s0, b40s1, b40s2, b40s3, b41s0, b42s0, b43s0, b43s1, b44s0, b45s0, b46s0, b46s1, b46s2, b46s3, b47s0, b48s0, b49s0, b50s0, b50s1, b51s0, b52s0, b53s0, b54s0, b55s0, b56s0, b56s1, b57s0, b58s0, b59s0, b60s0, b61s0, b62s0, b62s1, b63s0, b64s0, finished);
  signal thisState : stateType;
  signal nextState : stateType;
  signal stateEn : std_ulogic;
  signal newState : std_ulogic;
  signal r_AESinputSignal : std_ulogic_vector (31 downto 0);
  signal r_AESdataStream : std_ulogic_vector (7 downto 0);
  signal r_SBox : std_ulogic_vector (7 downto 0);
  signal p_SBox_re : std_ulogic;
  signal p_SBox_imm : std_ulogic_vector (7 downto 0);
  signal ni266_SBox : std_ulogic_vector (7 downto 0);
  signal ni286_SBox : std_ulogic_vector (7 downto 0);
  signal ni306_SBox : std_ulogic_vector (7 downto 0);
  signal ni326_SBox : std_ulogic_vector (7 downto 0);
  signal ni341_SBox : std_ulogic_vector (7 downto 0);
  signal ni361_SBox : std_ulogic_vector (7 downto 0);
  signal ni381_SBox : std_ulogic_vector (7 downto 0);
  signal ni401_SBox : std_ulogic_vector (7 downto 0);
  signal ni425_SBox : std_ulogic_vector (7 downto 0);
  signal ni445_SBox : std_ulogic_vector (7 downto 0);
  signal ni469_SBox : std_ulogic_vector (7 downto 0);
  signal ni489_SBox : std_ulogic_vector (7 downto 0);
  signal ni513_SBox : std_ulogic_vector (7 downto 0);
  signal ni533_SBox : std_ulogic_vector (7 downto 0);
  signal ni553_SBox : std_ulogic_vector (7 downto 0);
  signal ni573_SBox : std_ulogic_vector (7 downto 0);
  signal r_trigger : std_ulogic_vector (31 downto 0);
  signal ni1466_trigger : std_ulogic_vector (31 downto 0);
  signal ni1477_trigger : std_ulogic_vector (31 downto 0);
  signal r_i : std_ulogic_vector (31 downto 0);
  signal ni1468_i : std_ulogic_vector (31 downto 0);
  signal ni1475_i : std_ulogic_vector (31 downto 0);
  signal ni1480_i : std_ulogic_vector (31 downto 0);
  signal ni1490_i : std_ulogic_vector (31 downto 0);
  signal ni1492_i : std_ulogic_vector (31 downto 0);
  signal ni1502_i : std_ulogic_vector (31 downto 0);
  signal ni1504_i : std_ulogic_vector (31 downto 0);
  signal ni1516_i : std_ulogic_vector (31 downto 0);
  signal ni1604_i : std_ulogic_vector (31 downto 0);
  signal ni1662_i : std_ulogic_vector (31 downto 0);
  signal ni1663_i : std_ulogic_vector (31 downto 0);
  signal ni1673_i : std_ulogic_vector (31 downto 0);
  signal ni1674_i : std_ulogic_vector (31 downto 0);
  signal ni1687_i : std_ulogic_vector (31 downto 0);
  signal ni1691_i : std_ulogic_vector (31 downto 0);
  signal ni1700_i : std_ulogic_vector (31 downto 0);
  signal r_j : std_ulogic_vector (31 downto 0);
  signal ni1467_j : std_ulogic_vector (31 downto 0);
  signal ni1472_j : std_ulogic_vector (31 downto 0);
  signal ni1476_j : std_ulogic_vector (31 downto 0);
  signal ni1479_j : std_ulogic_vector (31 downto 0);
  signal ni1487_j : std_ulogic_vector (31 downto 0);
  signal ni1491_j : std_ulogic_vector (31 downto 0);
  signal ni1494_j : std_ulogic_vector (31 downto 0);
  signal ni1500_j : std_ulogic_vector (31 downto 0);
  signal ni1506_j : std_ulogic_vector (31 downto 0);
  signal ni1514_j : std_ulogic_vector (31 downto 0);
  signal ni1517_j : std_ulogic_vector (31 downto 0);
  signal ni1689_j : std_ulogic_vector (31 downto 0);
  signal ni1693_j : std_ulogic_vector (31 downto 0);
  signal ni1698_j : std_ulogic_vector (31 downto 0);
  signal r_k : std_ulogic_vector (31 downto 0);
  signal ni1478_k : std_ulogic_vector (31 downto 0);
  signal ni1484_k : std_ulogic_vector (31 downto 0);
  signal ni1488_k : std_ulogic_vector (31 downto 0);
  signal ni1665_k : std_ulogic_vector (31 downto 0);
  signal ni1671_k : std_ulogic_vector (31 downto 0);
  signal ni1677_k : std_ulogic_vector (31 downto 0);
  signal ni1685_k : std_ulogic_vector (31 downto 0);
  signal r_x : std_ulogic_vector (31 downto 0);
  signal ni1565_x : std_ulogic_vector (31 downto 0);
  signal ni1578_x : std_ulogic_vector (31 downto 0);
  signal ni1585_x : std_ulogic_vector (31 downto 0);
  signal ni1592_x : std_ulogic_vector (31 downto 0);
  signal r_streamByte : std_ulogic_vector (7 downto 0);
  signal ni1470_streamByte : std_ulogic_vector (7 downto 0);
  signal ni1482_streamByte : std_ulogic_vector (7 downto 0);
  signal r_state : std_ulogic_vector (7 downto 0);
  signal ni41_state : std_ulogic_vector (7 downto 0);
  signal ni225_state : std_ulogic_vector (7 downto 0);
  signal ni1245_state : std_ulogic_vector (7 downto 0);
  signal ni1251_state : std_ulogic_vector (7 downto 0);
  signal ni259_state : std_ulogic_vector (7 downto 0);
  signal ni1257_state : std_ulogic_vector (7 downto 0);
  signal ni279_state : std_ulogic_vector (7 downto 0);
  signal ni1263_state : std_ulogic_vector (7 downto 0);
  signal ni299_state : std_ulogic_vector (7 downto 0);
  signal ni1269_state : std_ulogic_vector (7 downto 0);
  signal ni319_state : std_ulogic_vector (7 downto 0);
  signal ni1272_state : std_ulogic_vector (7 downto 0);
  signal ni1278_state : std_ulogic_vector (7 downto 0);
  signal ni354_state : std_ulogic_vector (7 downto 0);
  signal ni1284_state : std_ulogic_vector (7 downto 0);
  signal ni374_state : std_ulogic_vector (7 downto 0);
  signal ni1290_state : std_ulogic_vector (7 downto 0);
  signal ni394_state : std_ulogic_vector (7 downto 0);
  signal ni414_state : std_ulogic_vector (7 downto 0);
  signal ni1296_state : std_ulogic_vector (7 downto 0);
  signal ni1302_state : std_ulogic_vector (7 downto 0);
  signal ni438_state : std_ulogic_vector (7 downto 0);
  signal ni458_state : std_ulogic_vector (7 downto 0);
  signal ni1308_state : std_ulogic_vector (7 downto 0);
  signal ni1314_state : std_ulogic_vector (7 downto 0);
  signal ni482_state : std_ulogic_vector (7 downto 0);
  signal ni502_state : std_ulogic_vector (7 downto 0);
  signal ni1320_state : std_ulogic_vector (7 downto 0);
  signal ni1326_state : std_ulogic_vector (7 downto 0);
  signal ni526_state : std_ulogic_vector (7 downto 0);
  signal ni1332_state : std_ulogic_vector (7 downto 0);
  signal ni546_state : std_ulogic_vector (7 downto 0);
  signal ni1338_state : std_ulogic_vector (7 downto 0);
  signal ni566_state : std_ulogic_vector (7 downto 0);
  signal ni586_state : std_ulogic_vector (7 downto 0);
  signal ni614_state : std_ulogic_vector (7 downto 0);
  signal ni632_state : std_ulogic_vector (7 downto 0);
  signal ni665_state : std_ulogic_vector (7 downto 0);
  signal ni680_state : std_ulogic_vector (7 downto 0);
  signal ni692_state : std_ulogic_vector (7 downto 0);
  signal ni702_state : std_ulogic_vector (7 downto 0);
  signal ni712_state : std_ulogic_vector (7 downto 0);
  signal ni727_state : std_ulogic_vector (7 downto 0);
  signal ni745_state : std_ulogic_vector (7 downto 0);
  signal ni775_state : std_ulogic_vector (7 downto 0);
  signal ni788_state : std_ulogic_vector (7 downto 0);
  signal ni803_state : std_ulogic_vector (7 downto 0);
  signal ni815_state : std_ulogic_vector (7 downto 0);
  signal ni825_state : std_ulogic_vector (7 downto 0);
  signal ni840_state : std_ulogic_vector (7 downto 0);
  signal ni858_state : std_ulogic_vector (7 downto 0);
  signal ni888_state : std_ulogic_vector (7 downto 0);
  signal ni898_state : std_ulogic_vector (7 downto 0);
  signal ni911_state : std_ulogic_vector (7 downto 0);
  signal ni926_state : std_ulogic_vector (7 downto 0);
  signal ni938_state : std_ulogic_vector (7 downto 0);
  signal ni953_state : std_ulogic_vector (7 downto 0);
  signal ni971_state : std_ulogic_vector (7 downto 0);
  signal ni1004_state : std_ulogic_vector (7 downto 0);
  signal ni1016_state : std_ulogic_vector (7 downto 0);
  signal ni1026_state : std_ulogic_vector (7 downto 0);
  signal ni1036_state : std_ulogic_vector (7 downto 0);
  signal ni1049_state : std_ulogic_vector (7 downto 0);
  signal ni1075_state : std_ulogic_vector (7 downto 0);
  signal ni1119_state : std_ulogic_vector (7 downto 0);
  signal ni1347_state : std_ulogic_vector (7 downto 0);
  signal ni1186_state : std_ulogic_vector (7 downto 0);
  signal p_state_addr : std_ulogic_vector (3 downto 0);
  signal p_state_addr2 : std_ulogic_vector (3 downto 0);
  signal p_state_we : std_ulogic;
  signal p_state_din : std_ulogic_vector (7 downto 0);
  signal p_state_dout : std_ulogic_vector (7 downto 0);
  signal p_state_imm : std_ulogic_vector (7 downto 0);
  signal p_state_re : std_ulogic;
  signal r2_state : std_ulogic_vector (7 downto 0);
  signal p_state_dout2 : std_ulogic_vector (7 downto 0);
  signal p_state_imm2 : std_ulogic_vector (7 downto 0);
  signal p_state_re2 : std_ulogic;
  signal r_stateTemp : std_ulogic_vector (7 downto 0);
  signal ni642_stateTemp : std_ulogic_vector (7 downto 0);
  signal ni755_stateTemp : std_ulogic_vector (7 downto 0);
  signal ni868_stateTemp : std_ulogic_vector (7 downto 0);
  signal ni981_stateTemp : std_ulogic_vector (7 downto 0);
  signal ni1082_stateTemp : std_ulogic_vector (7 downto 0);
  signal p_stateTemp_addr : std_ulogic_vector (3 downto 0);
  signal p_stateTemp_addr2 : std_ulogic_vector (3 downto 0);
  signal p_stateTemp_we : std_ulogic;
  signal p_stateTemp_din : std_ulogic_vector (7 downto 0);
  signal p_stateTemp_dout : std_ulogic_vector (7 downto 0);
  signal p_stateTemp_imm : std_ulogic_vector (7 downto 0);
  signal p_stateTemp_re : std_ulogic;
  signal r2_stateTemp : std_ulogic_vector (7 downto 0);
  signal p_stateTemp_dout2 : std_ulogic_vector (7 downto 0);
  signal p_stateTemp_imm2 : std_ulogic_vector (7 downto 0);
  signal p_stateTemp_re2 : std_ulogic;
  signal r_expandedKey : std_ulogic_vector (7 downto 0);
  signal ni115_expandedKey : std_ulogic_vector (7 downto 0);
  signal ni181_expandedKey : std_ulogic_vector (7 downto 0);
  signal ni1131_expandedKey : std_ulogic_vector (7 downto 0);
  signal p_expandedKey_addr : std_ulogic_vector (7 downto 0);
  signal p_expandedKey_addr2 : std_ulogic_vector (7 downto 0);
  signal p_expandedKey_we : std_ulogic;
  signal p_expandedKey_din : std_ulogic_vector (7 downto 0);
  signal p_expandedKey_dout : std_ulogic_vector (7 downto 0);
  signal p_expandedKey_imm : std_ulogic_vector (7 downto 0);
  signal p_expandedKey_re : std_ulogic;
  signal r2_expandedKey : std_ulogic_vector (7 downto 0);
  signal p_expandedKey_dout2 : std_ulogic_vector (7 downto 0);
  signal p_expandedKey_imm2 : std_ulogic_vector (7 downto 0);
  signal p_expandedKey_re2 : std_ulogic;
  signal r_key : std_ulogic_vector (31 downto 0);
  signal ni172_key : std_ulogic_vector (31 downto 0);
  signal ni233_key : std_ulogic_vector (31 downto 0);
  signal p_key_addr : std_ulogic_vector (3 downto 0);
  signal p_key_addr2 : std_ulogic_vector (3 downto 0);
  signal p_key_we : std_ulogic;
  signal p_key_din : std_ulogic_vector (31 downto 0);
  signal p_key_dout : std_ulogic_vector (31 downto 0);
  signal p_key_imm : std_ulogic_vector (31 downto 0);
  signal p_key_re : std_ulogic;
  signal r2_key : std_ulogic_vector (31 downto 0);
  signal p_key_dout2 : std_ulogic_vector (31 downto 0);
  signal p_key_imm2 : std_ulogic_vector (31 downto 0);
  signal p_key_re2 : std_ulogic;
  signal r_suif_tmp : std_ulogic_vector (31 downto 0);
  signal ni1519_suif_tmp : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp0 : std_ulogic_vector (31 downto 0);
  signal ni1520_suif_tmp0 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp1 : std_ulogic_vector (31 downto 0);
  signal ni1521_suif_tmp1 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp2 : std_ulogic_vector (31 downto 0);
  signal ni1522_suif_tmp2 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp3 : std_ulogic_vector (31 downto 0);
  signal ni1523_suif_tmp3 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp4 : std_ulogic_vector (31 downto 0);
  signal ni1524_suif_tmp4 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp5 : std_ulogic_vector (31 downto 0);
  signal ni1525_suif_tmp5 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp6 : std_ulogic_vector (31 downto 0);
  signal ni1526_suif_tmp6 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp7 : std_ulogic_vector (31 downto 0);
  signal ni1527_suif_tmp7 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp8 : std_ulogic_vector (31 downto 0);
  signal ni1528_suif_tmp8 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp9 : std_ulogic_vector (31 downto 0);
  signal ni1529_suif_tmp9 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp10 : std_ulogic_vector (31 downto 0);
  signal ni1530_suif_tmp10 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp11 : std_ulogic_vector (31 downto 0);
  signal ni1531_suif_tmp11 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp12 : std_ulogic_vector (31 downto 0);
  signal ni1532_suif_tmp12 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp13 : std_ulogic_vector (31 downto 0);
  signal ni1533_suif_tmp13 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp14 : std_ulogic_vector (31 downto 0);
  signal ni1534_suif_tmp14 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp15 : std_ulogic_vector (31 downto 0);
  signal ni1535_suif_tmp15 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp16 : std_ulogic_vector (31 downto 0);
  signal ni1536_suif_tmp16 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp17 : std_ulogic_vector (31 downto 0);
  signal ni1537_suif_tmp17 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp18 : std_ulogic_vector (31 downto 0);
  signal ni1538_suif_tmp18 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp19 : std_ulogic_vector (31 downto 0);
  signal ni1539_suif_tmp19 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp20 : std_ulogic_vector (31 downto 0);
  signal ni1540_suif_tmp20 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp21 : std_ulogic_vector (31 downto 0);
  signal ni1541_suif_tmp21 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp22 : std_ulogic_vector (31 downto 0);
  signal ni1542_suif_tmp22 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp23 : std_ulogic_vector (31 downto 0);
  signal ni1543_suif_tmp23 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp24 : std_ulogic_vector (31 downto 0);
  signal ni1544_suif_tmp24 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp25 : std_ulogic_vector (31 downto 0);
  signal ni1545_suif_tmp25 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp26 : std_ulogic_vector (31 downto 0);
  signal ni1546_suif_tmp26 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp27 : std_ulogic_vector (31 downto 0);
  signal ni1547_suif_tmp27 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp28 : std_ulogic_vector (31 downto 0);
  signal ni1548_suif_tmp28 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp29 : std_ulogic_vector (31 downto 0);
  signal ni1549_suif_tmp29 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp30 : std_ulogic_vector (31 downto 0);
  signal ni1550_suif_tmp30 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp31 : std_ulogic_vector (31 downto 0);
  signal ni1469_suif_tmp31 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp32 : std_ulogic_vector (31 downto 0);
  signal ni1474_suif_tmp32 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp_0 : std_ulogic_vector (31 downto 0);
  signal ni1471_suif_tmp_0 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp33 : std_ulogic_vector (31 downto 0);
  signal ni1481_suif_tmp33 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp34 : std_ulogic_vector (31 downto 0);
  signal ni1486_suif_tmp34 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp35 : std_ulogic_vector (31 downto 0);
  signal ni1489_suif_tmp35 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp_1 : std_ulogic_vector (31 downto 0);
  signal ni1483_suif_tmp_1 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp36 : std_ulogic_vector (31 downto 0);
  signal ni1503_suif_tmp36 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp37 : std_ulogic_vector (31 downto 0);
  signal ni1493_suif_tmp37 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp38 : std_ulogic_vector (31 downto 0);
  signal ni1495_suif_tmp38 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp39 : std_ulogic_vector (31 downto 0);
  signal ni1501_suif_tmp39 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp_2 : std_ulogic_vector (31 downto 0);
  signal ni1496_suif_tmp_2 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp0_0 : std_ulogic_vector (31 downto 0);
  signal ni1497_suif_tmp0_0 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp40 : std_ulogic_vector (31 downto 0);
  signal ni1505_suif_tmp40 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp41 : std_ulogic_vector (31 downto 0);
  signal ni1507_suif_tmp41 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp42 : std_ulogic_vector (31 downto 0);
  signal ni1515_suif_tmp42 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp_3 : std_ulogic_vector (31 downto 0);
  signal ni1508_suif_tmp_3 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp0_1 : std_ulogic_vector (31 downto 0);
  signal ni1509_suif_tmp0_1 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp_4 : std_ulogic_vector (31 downto 0);
  signal ni1510_suif_tmp_4 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp43 : std_ulogic_vector (31 downto 0);
  signal ni1518_suif_tmp43 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp44 : std_ulogic_vector (31 downto 0);
  signal ni1690_suif_tmp44 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp45 : std_ulogic_vector (31 downto 0);
  signal ni1551_suif_tmp45 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp46 : std_ulogic_vector (31 downto 0);
  signal ni1554_suif_tmp46 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp47 : std_ulogic_vector (31 downto 0);
  signal ni1557_suif_tmp47 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp48 : std_ulogic_vector (31 downto 0);
  signal ni1560_suif_tmp48 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp49 : std_ulogic_vector (31 downto 0);
  signal ni1563_suif_tmp49 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp50 : std_ulogic_vector (31 downto 0);
  signal ni1566_suif_tmp50 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp51 : std_ulogic_vector (31 downto 0);
  signal ni1569_suif_tmp51 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp52 : std_ulogic_vector (31 downto 0);
  signal ni1572_suif_tmp52 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp53 : std_ulogic_vector (31 downto 0);
  signal ni1576_suif_tmp53 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp54 : std_ulogic_vector (31 downto 0);
  signal ni1579_suif_tmp54 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp55 : std_ulogic_vector (31 downto 0);
  signal ni1583_suif_tmp55 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp56 : std_ulogic_vector (31 downto 0);
  signal ni1586_suif_tmp56 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp57 : std_ulogic_vector (31 downto 0);
  signal ni1590_suif_tmp57 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp58 : std_ulogic_vector (31 downto 0);
  signal ni1593_suif_tmp58 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp59 : std_ulogic_vector (31 downto 0);
  signal ni1596_suif_tmp59 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp60 : std_ulogic_vector (31 downto 0);
  signal ni1599_suif_tmp60 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp61 : std_ulogic_vector (31 downto 0);
  signal ni1603_suif_tmp61 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp62 : std_ulogic_vector (31 downto 0);
  signal ni1605_suif_tmp62 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp63 : std_ulogic_vector (31 downto 0);
  signal ni1606_suif_tmp63 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp64 : std_ulogic_vector (31 downto 0);
  signal ni1610_suif_tmp64 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp65 : std_ulogic_vector (31 downto 0);
  signal ni1620_suif_tmp65 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp66 : std_ulogic_vector (31 downto 0);
  signal ni1624_suif_tmp66 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp67 : std_ulogic_vector (31 downto 0);
  signal ni1634_suif_tmp67 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp68 : std_ulogic_vector (31 downto 0);
  signal ni1638_suif_tmp68 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp69 : std_ulogic_vector (31 downto 0);
  signal ni1648_suif_tmp69 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp70 : std_ulogic_vector (31 downto 0);
  signal ni1652_suif_tmp70 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp71 : std_ulogic_vector (31 downto 0);
  signal ni1664_suif_tmp71 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp72 : std_ulogic_vector (31 downto 0);
  signal ni1666_suif_tmp72 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp73 : std_ulogic_vector (31 downto 0);
  signal ni1672_suif_tmp73 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp74 : std_ulogic_vector (31 downto 0);
  signal ni1675_suif_tmp74 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp75 : std_ulogic_vector (31 downto 0);
  signal ni1688_suif_tmp75 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp76 : std_ulogic_vector (31 downto 0);
  signal ni1678_suif_tmp76 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp77 : std_ulogic_vector (31 downto 0);
  signal ni1686_suif_tmp77 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp_5 : std_ulogic_vector (31 downto 0);
  signal ni1676_suif_tmp_5 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp_6 : std_ulogic_vector (31 downto 0);
  signal ni1608_suif_tmp_6 : std_ulogic_vector (31 downto 0);
  signal ni1609_suif_tmp_6 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp0_2 : std_ulogic_vector (31 downto 0);
  signal ni1612_suif_tmp0_2 : std_ulogic_vector (31 downto 0);
  signal ni1613_suif_tmp0_2 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp2_0 : std_ulogic_vector (31 downto 0);
  signal ni1622_suif_tmp2_0 : std_ulogic_vector (31 downto 0);
  signal ni1623_suif_tmp2_0 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp3_0 : std_ulogic_vector (31 downto 0);
  signal ni1626_suif_tmp3_0 : std_ulogic_vector (31 downto 0);
  signal ni1627_suif_tmp3_0 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp5_0 : std_ulogic_vector (31 downto 0);
  signal ni1636_suif_tmp5_0 : std_ulogic_vector (31 downto 0);
  signal ni1637_suif_tmp5_0 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp6_0 : std_ulogic_vector (31 downto 0);
  signal ni1640_suif_tmp6_0 : std_ulogic_vector (31 downto 0);
  signal ni1641_suif_tmp6_0 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp8_0 : std_ulogic_vector (31 downto 0);
  signal ni1650_suif_tmp8_0 : std_ulogic_vector (31 downto 0);
  signal ni1651_suif_tmp8_0 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp9_0 : std_ulogic_vector (31 downto 0);
  signal ni1654_suif_tmp9_0 : std_ulogic_vector (31 downto 0);
  signal ni1655_suif_tmp9_0 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp_7 : std_ulogic_vector (31 downto 0);
  signal ni1667_suif_tmp_7 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp0_3 : std_ulogic_vector (31 downto 0);
  signal ni1668_suif_tmp0_3 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp_8 : std_ulogic_vector (31 downto 0);
  signal ni1679_suif_tmp_8 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp0_4 : std_ulogic_vector (31 downto 0);
  signal ni1680_suif_tmp0_4 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp_9 : std_ulogic_vector (31 downto 0);
  signal ni1681_suif_tmp_9 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp78 : std_ulogic_vector (31 downto 0);
  signal ni1692_suif_tmp78 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp79 : std_ulogic_vector (31 downto 0);
  signal ni1694_suif_tmp79 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp80 : std_ulogic_vector (31 downto 0);
  signal ni1699_suif_tmp80 : std_ulogic_vector (31 downto 0);
  signal r_suif_tmp81 : std_ulogic_vector (7 downto 0);
  signal ni1696_suif_tmp81 : std_ulogic_vector (7 downto 0);
  signal r_suif_tmp_10 : std_ulogic_vector (31 downto 0);
  signal ni1695_suif_tmp_10 : std_ulogic_vector (31 downto 0);
  signal r_r_e_g_0 : std_ulogic_vector (3 downto 0);
  signal ni1473_r_e_g_0 : std_ulogic_vector (3 downto 0);
  signal ni1498_r_e_g_0 : std_ulogic_vector (3 downto 0);
  signal ni1512_r_e_g_0 : std_ulogic_vector (3 downto 0);
  signal ni1552_r_e_g_0 : std_ulogic_vector (3 downto 0);
  signal ni1553_r_e_g_0 : std_ulogic_vector (3 downto 0);
  signal ni1555_r_e_g_0 : std_ulogic_vector (3 downto 0);
  signal ni1556_r_e_g_0 : std_ulogic_vector (3 downto 0);
  signal ni1558_r_e_g_0 : std_ulogic_vector (3 downto 0);
  signal ni1559_r_e_g_0 : std_ulogic_vector (3 downto 0);
  signal ni1561_r_e_g_0 : std_ulogic_vector (3 downto 0);
  signal ni1562_r_e_g_0 : std_ulogic_vector (3 downto 0);
  signal ni1564_r_e_g_0 : std_ulogic_vector (3 downto 0);
  signal ni1568_r_e_g_0 : std_ulogic_vector (3 downto 0);
  signal ni1570_r_e_g_0 : std_ulogic_vector (3 downto 0);
  signal ni1571_r_e_g_0 : std_ulogic_vector (3 downto 0);
  signal ni1573_r_e_g_0 : std_ulogic_vector (3 downto 0);
  signal ni1574_r_e_g_0 : std_ulogic_vector (3 downto 0);
  signal ni1575_r_e_g_0 : std_ulogic_vector (3 downto 0);
  signal ni1577_r_e_g_0 : std_ulogic_vector (3 downto 0);
  signal ni1581_r_e_g_0 : std_ulogic_vector (3 downto 0);
  signal ni1582_r_e_g_0 : std_ulogic_vector (3 downto 0);
  signal ni1584_r_e_g_0 : std_ulogic_vector (3 downto 0);
  signal ni1588_r_e_g_0 : std_ulogic_vector (3 downto 0);
  signal ni1589_r_e_g_0 : std_ulogic_vector (3 downto 0);
  signal ni1591_r_e_g_0 : std_ulogic_vector (3 downto 0);
  signal ni1595_r_e_g_0 : std_ulogic_vector (3 downto 0);
  signal ni1597_r_e_g_0 : std_ulogic_vector (3 downto 0);
  signal ni1598_r_e_g_0 : std_ulogic_vector (3 downto 0);
  signal ni1600_r_e_g_0 : std_ulogic_vector (3 downto 0);
  signal ni1601_r_e_g_0 : std_ulogic_vector (3 downto 0);
  signal ni1602_r_e_g_0 : std_ulogic_vector (3 downto 0);
  signal ni1607_r_e_g_0 : std_ulogic_vector (3 downto 0);
  signal ni1611_r_e_g_0 : std_ulogic_vector (3 downto 0);
  signal ni1615_r_e_g_0 : std_ulogic_vector (3 downto 0);
  signal ni1617_r_e_g_0 : std_ulogic_vector (3 downto 0);
  signal ni1619_r_e_g_0 : std_ulogic_vector (3 downto 0);
  signal ni1625_r_e_g_0 : std_ulogic_vector (3 downto 0);
  signal ni1629_r_e_g_0 : std_ulogic_vector (3 downto 0);
  signal ni1631_r_e_g_0 : std_ulogic_vector (3 downto 0);
  signal ni1633_r_e_g_0 : std_ulogic_vector (3 downto 0);
  signal ni1639_r_e_g_0 : std_ulogic_vector (3 downto 0);
  signal ni1643_r_e_g_0 : std_ulogic_vector (3 downto 0);
  signal ni1645_r_e_g_0 : std_ulogic_vector (3 downto 0);
  signal ni1647_r_e_g_0 : std_ulogic_vector (3 downto 0);
  signal ni1653_r_e_g_0 : std_ulogic_vector (3 downto 0);
  signal ni1657_r_e_g_0 : std_ulogic_vector (3 downto 0);
  signal ni1659_r_e_g_0 : std_ulogic_vector (3 downto 0);
  signal ni1661_r_e_g_0 : std_ulogic_vector (3 downto 0);
  signal ni1670_r_e_g_0 : std_ulogic_vector (3 downto 0);
  signal ni1683_r_e_g_0 : std_ulogic_vector (3 downto 0);
  signal ni1697_r_e_g_0 : std_ulogic_vector (3 downto 0);
  signal r_r_e_g_1 : std_ulogic_vector (7 downto 0);
  signal ni1485_r_e_g_1 : std_ulogic_vector (7 downto 0);
  signal ni1499_r_e_g_1 : std_ulogic_vector (7 downto 0);
  signal ni665_r_e_g_1 : std_ulogic_vector (7 downto 0);
  signal ni775_r_e_g_1 : std_ulogic_vector (7 downto 0);
  signal ni888_r_e_g_1 : std_ulogic_vector (7 downto 0);
  signal ni1004_r_e_g_1 : std_ulogic_vector (7 downto 0);
  signal ni1684_r_e_g_1 : std_ulogic_vector (7 downto 0);
  signal r_r_e_g_2 : std_ulogic_vector (3 downto 0);
  signal ni1513_r_e_g_2 : std_ulogic_vector (3 downto 0);
  signal ni1567_r_e_g_2 : std_ulogic_vector (3 downto 0);
  signal ni1580_r_e_g_2 : std_ulogic_vector (3 downto 0);
  signal ni1587_r_e_g_2 : std_ulogic_vector (3 downto 0);
  signal ni1594_r_e_g_2 : std_ulogic_vector (3 downto 0);
  signal ni1616_r_e_g_2 : std_ulogic_vector (3 downto 0);
  signal ni1618_r_e_g_2 : std_ulogic_vector (3 downto 0);
  signal ni1614_r_e_g_2 : std_ulogic_vector (3 downto 0);
  signal ni1630_r_e_g_2 : std_ulogic_vector (3 downto 0);
  signal ni1632_r_e_g_2 : std_ulogic_vector (3 downto 0);
  signal ni1628_r_e_g_2 : std_ulogic_vector (3 downto 0);
  signal ni1644_r_e_g_2 : std_ulogic_vector (3 downto 0);
  signal ni1646_r_e_g_2 : std_ulogic_vector (3 downto 0);
  signal ni1642_r_e_g_2 : std_ulogic_vector (3 downto 0);
  signal ni1658_r_e_g_2 : std_ulogic_vector (3 downto 0);
  signal ni1660_r_e_g_2 : std_ulogic_vector (3 downto 0);
  signal ni1656_r_e_g_2 : std_ulogic_vector (3 downto 0);
  signal ni1669_r_e_g_2 : std_ulogic_vector (3 downto 0);
  signal ni1682_r_e_g_2 : std_ulogic_vector (3 downto 0);
  signal r_r_e_g_3 : std_ulogic_vector (3 downto 0);
  signal ni1511_r_e_g_3 : std_ulogic_vector (3 downto 0);
  signal ni1621_r_e_g_3 : std_ulogic_vector (3 downto 0);
  signal ni1635_r_e_g_3 : std_ulogic_vector (3 downto 0);
  signal ni1649_r_e_g_3 : std_ulogic_vector (3 downto 0);
  signal ni1029_r_e_g_3 : std_ulogic_vector (3 downto 0);
  signal r_r_e_g_4 : std_ulogic_vector (7 downto 0);
  signal ni680_r_e_g_4 : std_ulogic_vector (7 downto 0);
  signal ni788_r_e_g_4 : std_ulogic_vector (7 downto 0);
  signal ni898_r_e_g_4 : std_ulogic_vector (7 downto 0);
  signal ni1016_r_e_g_4 : std_ulogic_vector (7 downto 0);
  signal r_r_e_g_5 : std_ulogic_vector (7 downto 0);
  signal ni692_r_e_g_5 : std_ulogic_vector (7 downto 0);
  signal ni803_r_e_g_5 : std_ulogic_vector (7 downto 0);
  signal ni911_r_e_g_5 : std_ulogic_vector (7 downto 0);
  signal ni1026_r_e_g_5 : std_ulogic_vector (7 downto 0);
  signal r_r_e_g_6 : std_ulogic_vector (7 downto 0);
  signal ni702_r_e_g_6 : std_ulogic_vector (7 downto 0);
  signal ni815_r_e_g_6 : std_ulogic_vector (7 downto 0);
  signal ni926_r_e_g_6 : std_ulogic_vector (7 downto 0);
  signal ni1036_r_e_g_6 : std_ulogic_vector (7 downto 0);
  signal r_r_e_g_7 : std_ulogic_vector (3 downto 0);
  signal ni1039_r_e_g_7 : std_ulogic_vector (3 downto 0);
  signal r_r_e_g_8 : std_ulogic_vector (3 downto 0);
  signal ni1052_r_e_g_8 : std_ulogic_vector (3 downto 0);
  signal r_r_e_g_9 : std_ulogic_vector (3 downto 0);
  signal ni985_r_e_g_9 : std_ulogic_vector (3 downto 0);
  signal ti573_SBox : std_ulogic_vector (7 downto 0);
  signal ti553_SBox : std_ulogic_vector (7 downto 0);
  signal ti533_SBox : std_ulogic_vector (7 downto 0);
  signal ti513_SBox : std_ulogic_vector (7 downto 0);
  signal ti489_SBox : std_ulogic_vector (7 downto 0);
  signal ti469_SBox : std_ulogic_vector (7 downto 0);
  signal ti445_SBox : std_ulogic_vector (7 downto 0);
  signal ti425_SBox : std_ulogic_vector (7 downto 0);
  signal ti401_SBox : std_ulogic_vector (7 downto 0);
  signal ti381_SBox : std_ulogic_vector (7 downto 0);
  signal ti361_SBox : std_ulogic_vector (7 downto 0);
  signal ti341_SBox : std_ulogic_vector (7 downto 0);
  signal ti326_SBox : std_ulogic_vector (7 downto 0);
  signal ti306_SBox : std_ulogic_vector (7 downto 0);
  signal ti286_SBox : std_ulogic_vector (7 downto 0);
  signal ti266_SBox : std_ulogic_vector (7 downto 0);
  signal s_b0s0_en : std_ulogic;
  signal s_b1s0_en : std_ulogic;
  signal s_b3s0_en : std_ulogic;
  signal s_b4s0_en : std_ulogic;
  signal s_b8s0_en : std_ulogic;
  signal s_b13s0_en : std_ulogic;
  signal s_b62s1_en : std_ulogic;
  signal s_b64s0_en : std_ulogic;
begin
  process (clk,reset)
  begin
    if (reset='1') then
     thisState <= init;
    elsif (clk'event and clk='1') then
      if (stateEn = '1') then
        thisState <= nextState;
      end if;
    end if;
  end process;

  s_b0s0_en <= p_AESinputSignal_rdy;
  s_b1s0_en <= p_AESdataStream_rdy;
  s_b3s0_en <= p_AESdataStream_eos and p_AESinputSignal_rdy;
  s_b4s0_en <= p_AESdataStream_rdy;
  s_b8s0_en <= p_AESdataStream_eos;
  s_b13s0_en <= p_AESinputSignal_rdy;
  s_b62s1_en <= p_AESoutputStream_rdy;
  s_b64s0_en <= p_AESoutputStream_rdy;
  stateEn <= 
    '0' when thisState = b0s0 and s_b0s0_en = '0' else
    '0' when thisState = b1s0 and s_b1s0_en = '0' else
    '0' when thisState = b3s0 and s_b3s0_en = '0' else
    '0' when thisState = b4s0 and s_b4s0_en = '0' else
    '0' when thisState = b8s0 and s_b8s0_en = '0' else
    '0' when thisState = b13s0 and s_b13s0_en = '0' else
    '0' when thisState = b62s1 and s_b62s1_en = '0' else
    '0' when thisState = b64s0 and s_b64s0_en = '0' else
    '1';

  process (ni1692_suif_tmp78,r_suif_tmp80,ni1694_suif_tmp79,ni1690_suif_tmp44,ni1688_suif_tmp75,r_suif_tmp77,ni1678_suif_tmp76,ni1675_suif_tmp74,ni1664_suif_tmp71,r_suif_tmp73,ni1666_suif_tmp72,r_suif_tmp62,ni1652_suif_tmp70,ni1648_suif_tmp69,ni1638_suif_tmp68,ni1634_suif_tmp67,ni1624_suif_tmp66,ni1620_suif_tmp65,ni1610_suif_tmp64,ni1606_suif_tmp63,r_suif_tmp61,ni1518_suif_tmp43,ni1505_suif_tmp40,r_suif_tmp42,ni1507_suif_tmp41,ni1493_suif_tmp37,r_suif_tmp39,ni1495_suif_tmp38,ni1489_suif_tmp35,r_suif_tmp34,ni1481_suif_tmp33,r_suif_tmp32,ni1469_suif_tmp31,thisState)
  begin
    case thisState is
    when init =>
      nextState <= b0s0;
    when b0s0 =>
      nextState <= b1s0;
    when b1s0 =>
      if ((not ni1469_suif_tmp31(0)) = '1') then
        nextState <= b3s0;
      else
        nextState <= b1s1;
      end if;
    when b1s1 =>
      nextState <= b1s2;
    when b1s2 =>
      if (r_suif_tmp32(0) = '1') then
        nextState <= b2s0;
      elsif ((not r_suif_tmp32(0)) = '1') then
        nextState <= b1s0;
      else
        nextState <= b1s2;
      end if;
    when b2s0 =>
      nextState <= b1s0;
    when b3s0 =>
      nextState <= b3s1;
    when b3s1 =>
      nextState <= b4s0;
    when b4s0 =>
      if ((not ni1481_suif_tmp33(0)) = '1') then
        nextState <= b8s0;
      else
        nextState <= b4s1;
      end if;
    when b4s1 =>
      nextState <= b4s2;
    when b4s2 =>
      if (r_suif_tmp34(0) = '1') then
        nextState <= b5s0;
      elsif ((not r_suif_tmp34(0)) = '1') then
        nextState <= b6s0;
      else
        nextState <= b4s2;
      end if;
    when b5s0 =>
      nextState <= b6s0;
    when b6s0 =>
      if (ni1489_suif_tmp35(0) = '1') then
        nextState <= b7s0;
      elsif ((not ni1489_suif_tmp35(0)) = '1') then
        nextState <= b4s0;
      else
        nextState <= b6s0;
      end if;
    when b7s0 =>
      nextState <= b4s0;
    when b8s0 =>
      nextState <= b9s0;
    when b9s0 =>
      if (ni1495_suif_tmp38(0) = '1') then
        nextState <= b10s0;
      elsif ((not ni1495_suif_tmp38(0)) = '1') then
        nextState <= b12s0;
      else
        nextState <= b9s0;
      end if;
    when b10s0 =>
      nextState <= b11s0;
    when b11s0 =>
      nextState <= b11s1;
    when b11s1 =>
      if (r_suif_tmp39(0) = '1') then
        nextState <= b11s0;
      elsif ((not r_suif_tmp39(0)) = '1') then
        nextState <= b12s0;
      else
        nextState <= b11s1;
      end if;
    when b12s0 =>
      if (ni1493_suif_tmp37(0) = '1') then
        nextState <= b9s0;
      elsif ((not ni1493_suif_tmp37(0)) = '1') then
        nextState <= b13s0;
      else
        nextState <= b12s0;
      end if;
    when b13s0 =>
      nextState <= b14s0;
    when b14s0 =>
      if (ni1507_suif_tmp41(0) = '1') then
        nextState <= b15s0;
      elsif ((not ni1507_suif_tmp41(0)) = '1') then
        nextState <= b17s0;
      else
        nextState <= b14s0;
      end if;
    when b15s0 =>
      nextState <= b16s0;
    when b16s0 =>
      nextState <= b16s1;
    when b16s1 =>
      if (r_suif_tmp42(0) = '1') then
        nextState <= b16s0;
      elsif ((not r_suif_tmp42(0)) = '1') then
        nextState <= b17s0;
      else
        nextState <= b16s1;
      end if;
    when b17s0 =>
      if (ni1505_suif_tmp40(0) = '1') then
        nextState <= b14s0;
      elsif ((not ni1505_suif_tmp40(0)) = '1') then
        nextState <= b18s0;
      else
        nextState <= b17s0;
      end if;
    when b18s0 =>
      if (ni1518_suif_tmp43(0) = '1') then
        nextState <= b19s0;
      elsif ((not ni1518_suif_tmp43(0)) = '1') then
        nextState <= b59s0;
      else
        nextState <= b18s0;
      end if;
    when b19s0 =>
      nextState <= b20s0;
    when b20s0 =>
      nextState <= b20s1;
    when b20s1 =>
      nextState <= b20s2;
    when b20s2 =>
      nextState <= b20s3;
    when b20s3 =>
      nextState <= b20s4;
    when b20s4 =>
      nextState <= b20s5;
    when b20s5 =>
      nextState <= b20s6;
    when b20s6 =>
      nextState <= b20s7;
    when b20s7 =>
      nextState <= b20s8;
    when b20s8 =>
      nextState <= b20s9;
    when b20s9 =>
      nextState <= b20s10;
    when b20s10 =>
      nextState <= b20s11;
    when b20s11 =>
      nextState <= b20s12;
    when b20s12 =>
      nextState <= b20s13;
    when b20s13 =>
      nextState <= b20s14;
    when b20s14 =>
      nextState <= b20s15;
    when b20s15 =>
      nextState <= b20s16;
    when b20s16 =>
      nextState <= b20s17;
    when b20s17 =>
      nextState <= b20s18;
    when b20s18 =>
      nextState <= b20s19;
    when b20s19 =>
      nextState <= b20s20;
    when b20s20 =>
      nextState <= b20s21;
    when b20s21 =>
      nextState <= b20s22;
    when b20s22 =>
      nextState <= b20s23;
    when b20s23 =>
      nextState <= b20s24;
    when b20s24 =>
      nextState <= b20s25;
    when b20s25 =>
      nextState <= b20s26;
    when b20s26 =>
      nextState <= b20s27;
    when b20s27 =>
      nextState <= b20s28;
    when b20s28 =>
      nextState <= b20s29;
    when b20s29 =>
      nextState <= b20s30;
    when b20s30 =>
      nextState <= b20s31;
    when b20s31 =>
      nextState <= b20s32;
    when b20s32 =>
      nextState <= b20s33;
    when b20s33 =>
      nextState <= b20s34;
    when b20s34 =>
      nextState <= b20s35;
    when b20s35 =>
      nextState <= b20s36;
    when b20s36 =>
      nextState <= b20s37;
    when b20s37 =>
      nextState <= b20s38;
    when b20s38 =>
      nextState <= b20s39;
    when b20s39 =>
      nextState <= b20s40;
    when b20s40 =>
      nextState <= b20s41;
    when b20s41 =>
      nextState <= b20s42;
    when b20s42 =>
      nextState <= b20s43;
    when b20s43 =>
      if (r_suif_tmp61(0) = '1') then
        nextState <= b21s0;
      elsif ((not r_suif_tmp61(0)) = '1') then
        nextState <= b52s0;
      else
        nextState <= b20s43;
      end if;
    when b21s0 =>
      nextState <= b22s0;
    when b22s0 =>
      nextState <= b22s1;
    when b22s1 =>
      if (ni1606_suif_tmp63(0) = '1') then
        nextState <= b23s0;
      elsif ((not ni1606_suif_tmp63(0)) = '1') then
        nextState <= b24s0;
      else
        nextState <= b22s1;
      end if;
    when b23s0 =>
      nextState <= b25s0;
    when b24s0 =>
      nextState <= b25s0;
    when b25s0 =>
      nextState <= b25s1;
    when b25s1 =>
      if (ni1610_suif_tmp64(0) = '1') then
        nextState <= b26s0;
      elsif ((not ni1610_suif_tmp64(0)) = '1') then
        nextState <= b27s0;
      else
        nextState <= b25s1;
      end if;
    when b26s0 =>
      nextState <= b28s0;
    when b27s0 =>
      nextState <= b28s0;
    when b28s0 =>
      nextState <= b28s1;
    when b28s1 =>
      nextState <= b28s2;
    when b28s2 =>
      nextState <= b28s3;
    when b28s3 =>
      if (ni1620_suif_tmp65(0) = '1') then
        nextState <= b29s0;
      elsif ((not ni1620_suif_tmp65(0)) = '1') then
        nextState <= b30s0;
      else
        nextState <= b28s3;
      end if;
    when b29s0 =>
      nextState <= b31s0;
    when b30s0 =>
      nextState <= b31s0;
    when b31s0 =>
      nextState <= b31s1;
    when b31s1 =>
      if (ni1624_suif_tmp66(0) = '1') then
        nextState <= b32s0;
      elsif ((not ni1624_suif_tmp66(0)) = '1') then
        nextState <= b33s0;
      else
        nextState <= b31s1;
      end if;
    when b32s0 =>
      nextState <= b34s0;
    when b33s0 =>
      nextState <= b34s0;
    when b34s0 =>
      nextState <= b34s1;
    when b34s1 =>
      nextState <= b34s2;
    when b34s2 =>
      nextState <= b34s3;
    when b34s3 =>
      if (ni1634_suif_tmp67(0) = '1') then
        nextState <= b35s0;
      elsif ((not ni1634_suif_tmp67(0)) = '1') then
        nextState <= b36s0;
      else
        nextState <= b34s3;
      end if;
    when b35s0 =>
      nextState <= b37s0;
    when b36s0 =>
      nextState <= b37s0;
    when b37s0 =>
      nextState <= b37s1;
    when b37s1 =>
      if (ni1638_suif_tmp68(0) = '1') then
        nextState <= b38s0;
      elsif ((not ni1638_suif_tmp68(0)) = '1') then
        nextState <= b39s0;
      else
        nextState <= b37s1;
      end if;
    when b38s0 =>
      nextState <= b40s0;
    when b39s0 =>
      nextState <= b40s0;
    when b40s0 =>
      nextState <= b40s1;
    when b40s1 =>
      nextState <= b40s2;
    when b40s2 =>
      nextState <= b40s3;
    when b40s3 =>
      if (ni1648_suif_tmp69(0) = '1') then
        nextState <= b41s0;
      elsif ((not ni1648_suif_tmp69(0)) = '1') then
        nextState <= b42s0;
      else
        nextState <= b40s3;
      end if;
    when b41s0 =>
      nextState <= b43s0;
    when b42s0 =>
      nextState <= b43s0;
    when b43s0 =>
      nextState <= b43s1;
    when b43s1 =>
      if (ni1652_suif_tmp70(0) = '1') then
        nextState <= b44s0;
      elsif ((not ni1652_suif_tmp70(0)) = '1') then
        nextState <= b45s0;
      else
        nextState <= b43s1;
      end if;
    when b44s0 =>
      nextState <= b46s0;
    when b45s0 =>
      nextState <= b46s0;
    when b46s0 =>
      nextState <= b46s1;
    when b46s1 =>
      nextState <= b46s2;
    when b46s2 =>
      nextState <= b46s3;
    when b46s3 =>
      if (r_suif_tmp62(0) = '1') then
        nextState <= b22s0;
      elsif ((not r_suif_tmp62(0)) = '1') then
        nextState <= b47s0;
      else
        nextState <= b46s3;
      end if;
    when b47s0 =>
      nextState <= b48s0;
    when b48s0 =>
      if (ni1666_suif_tmp72(0) = '1') then
        nextState <= b49s0;
      elsif ((not ni1666_suif_tmp72(0)) = '1') then
        nextState <= b51s0;
      else
        nextState <= b48s0;
      end if;
    when b49s0 =>
      nextState <= b50s0;
    when b50s0 =>
      nextState <= b50s1;
    when b50s1 =>
      if (r_suif_tmp73(0) = '1') then
        nextState <= b50s0;
      elsif ((not r_suif_tmp73(0)) = '1') then
        nextState <= b51s0;
      else
        nextState <= b50s1;
      end if;
    when b51s0 =>
      if (ni1664_suif_tmp71(0) = '1') then
        nextState <= b48s0;
      elsif ((not ni1664_suif_tmp71(0)) = '1') then
        nextState <= b52s0;
      else
        nextState <= b51s0;
      end if;
    when b52s0 =>
      if (ni1675_suif_tmp74(0) = '1') then
        nextState <= b53s0;
      elsif ((not ni1675_suif_tmp74(0)) = '1') then
        nextState <= b58s0;
      else
        nextState <= b52s0;
      end if;
    when b53s0 =>
      nextState <= b54s0;
    when b54s0 =>
      if (ni1678_suif_tmp76(0) = '1') then
        nextState <= b55s0;
      elsif ((not ni1678_suif_tmp76(0)) = '1') then
        nextState <= b57s0;
      else
        nextState <= b54s0;
      end if;
    when b55s0 =>
      nextState <= b56s0;
    when b56s0 =>
      nextState <= b56s1;
    when b56s1 =>
      if (r_suif_tmp77(0) = '1') then
        nextState <= b56s0;
      elsif ((not r_suif_tmp77(0)) = '1') then
        nextState <= b57s0;
      else
        nextState <= b56s1;
      end if;
    when b57s0 =>
      if (ni1688_suif_tmp75(0) = '1') then
        nextState <= b54s0;
      elsif ((not ni1688_suif_tmp75(0)) = '1') then
        nextState <= b58s0;
      else
        nextState <= b57s0;
      end if;
    when b58s0 =>
      if (ni1690_suif_tmp44(0) = '1') then
        nextState <= b20s0;
      elsif ((not ni1690_suif_tmp44(0)) = '1') then
        nextState <= b59s0;
      else
        nextState <= b58s0;
      end if;
    when b59s0 =>
      nextState <= b60s0;
    when b60s0 =>
      if (ni1694_suif_tmp79(0) = '1') then
        nextState <= b61s0;
      elsif ((not ni1694_suif_tmp79(0)) = '1') then
        nextState <= b63s0;
      else
        nextState <= b60s0;
      end if;
    when b61s0 =>
      nextState <= b62s0;
    when b62s0 =>
      nextState <= b62s1;
    when b62s1 =>
      if (r_suif_tmp80(0) = '1') then
        nextState <= b62s0;
      elsif ((not r_suif_tmp80(0)) = '1') then
        nextState <= b63s0;
      else
        nextState <= b62s1;
      end if;
    when b63s0 =>
      if (ni1692_suif_tmp78(0) = '1') then
        nextState <= b60s0;
      elsif ((not ni1692_suif_tmp78(0)) = '1') then
        nextState <= b64s0;
      else
        nextState <= b63s0;
      end if;
    when b64s0 =>
      nextState <= finished;
    when finished =>
      nextState <= finished;
    when others =>
      nextState <= init;
    end case;
  end process;

  process (clk,reset)
  begin
    if (reset='1') then
     newState <= '1';
    elsif (clk'event and clk='1') then
      newState <= stateEn;
    end if;
  end process;

-- b0s0
  ni1466_trigger <= r_AESinputSignal;
  ni1467_j <= X"00000000";
  ni1468_i <= X"00000000";

-- b1s0
  ni1469_suif_tmp31 <= "0000000000000000000000000000000" & eq("0" & mkvec(p_AESdataStream_eos), "00");

-- b1s1
  ni1470_streamByte <= r_AESdataStream;
  ni1471_suif_tmp_0 <= r_j;
  ni1472_j <= add(ni1471_suif_tmp_0, X"00000001");
  ni1474_suif_tmp32 <= "0000000000000000000000000000000" & eq(ni1472_j, X"00000004");
  ni1473_r_e_g_0 <= add(shl(r_i(3 downto 0), 2), ni1471_suif_tmp_0(3 downto 0));

-- b1s2
  ni41_state <= r_streamByte;

-- b2s0
  ni1475_i <= add(r_i, X"00000001");
  ni1476_j <= X"00000000";

-- b3s0
  ni1477_trigger <= r_AESinputSignal;
  ni1478_k <= X"00000000";
  ni1479_j <= X"00000000";
  ni1480_i <= X"00000000";

-- b3s1

-- b4s0
  ni1481_suif_tmp33 <= "0000000000000000000000000000000" & eq("0" & mkvec(p_AESdataStream_eos), "00");

-- b4s1
  ni1482_streamByte <= r_AESdataStream;
  ni1483_suif_tmp_1 <= r_k;
  ni1484_k <= add(ni1483_suif_tmp_1, X"00000001");
  ni1486_suif_tmp34 <= "0000000000000000000000000000000" & eq(ni1484_k, X"00000004");
  ni1485_r_e_g_1 <= add(shl(add(shl(r_i(7 downto 0), 2), r_j(7 downto 0)), 2), ni1483_suif_tmp_1(7 downto 0));

-- b4s2
  ni115_expandedKey <= r_streamByte;

-- b5s0
  ni1487_j <= add(r_j, X"00000001");
  ni1488_k <= X"00000000";

-- b6s0
  ni1489_suif_tmp35 <= "0000000000000000000000000000000" & eq(r_j, X"00000004");

-- b7s0
  ni1490_i <= add(r_i, X"00000001");
  ni1491_j <= X"00000000";

-- b8s0
  ni1492_i <= X"00000000";

-- b9s0
  ni1494_j <= X"00000000";
  ni1495_suif_tmp38 <= "0000000000000000000000000000000" & cmp_less_u(ni1494_j, X"00000004");

-- b10s0
  ni1496_suif_tmp_2 <= r_i;
  ni1497_suif_tmp0_0 <= r_i;

-- b11s0
  ni1500_j <= add(r_j, X"00000001");
  ni1501_suif_tmp39 <= "0000000000000000000000000000000" & cmp_less_u(ni1500_j, X"00000004");
  ni1499_r_e_g_1 <= add(shl(add(X"00", r_suif_tmp0_0(7 downto 0)), 2), r_j(7 downto 0));
  ni1498_r_e_g_0 <= add(shl(r_suif_tmp_2(3 downto 0), 2), r_j(3 downto 0));

-- b11s1
  ni181_expandedKey <= p_expandedKey_imm2;
  ni172_key <= X"000000" & ni181_expandedKey;

-- b12s0
  ni1502_i <= add(r_i, X"00000001");
  ni1493_suif_tmp37 <= "0000000000000000000000000000000" & cmp_less_u(ni1502_i, X"00000004");

-- b13s0
  ni1503_suif_tmp36 <= r_AESinputSignal;
  ni1504_i <= X"00000000";

-- b14s0
  ni1506_j <= X"00000000";
  ni1507_suif_tmp41 <= "0000000000000000000000000000000" & cmp_less_u(ni1506_j, X"00000004");

-- b15s0
  ni1508_suif_tmp_3 <= r_i;
  ni1509_suif_tmp0_1 <= r_i;

-- b16s0
  ni1510_suif_tmp_4 <= add(shl(r_suif_tmp_3, 2), r_j);
  ni1514_j <= add(r_j, X"00000001");
  ni1515_suif_tmp42 <= "0000000000000000000000000000000" & cmp_less_u(ni1514_j, X"00000004");
  ni1512_r_e_g_0 <= add(ni1510_suif_tmp_4(3 downto 0), X"0");
  ni1513_r_e_g_2 <= add(shl(r_suif_tmp0_1(3 downto 0), 2), r_j(3 downto 0));
  ni1511_r_e_g_3 <= add(ni1510_suif_tmp_4(3 downto 0), X"0");

-- b16s1
  ni1245_state <= p_state_imm2;
  ni233_key <= p_key_imm2;
  ni225_state <= ni1245_state xor ni233_key(7 downto 0);

-- b17s0
  ni1516_i <= add(r_i, X"00000001");
  ni1505_suif_tmp40 <= "0000000000000000000000000000000" & cmp_less_u(ni1516_i, X"00000004");

-- b18s0
  ni1517_j <= X"00000001";
  ni1518_suif_tmp43 <= "0000000000000000000000000000000" & cmp_less_equal_u(ni1517_j, X"0000000a");

-- b19s0
  ni1519_suif_tmp <= X"00000000";
  ni1520_suif_tmp0 <= X"00000000";
  ni1521_suif_tmp1 <= X"00000001";
  ni1522_suif_tmp2 <= X"00000001";
  ni1523_suif_tmp3 <= X"00000002";
  ni1524_suif_tmp4 <= X"00000002";
  ni1525_suif_tmp5 <= X"00000003";
  ni1526_suif_tmp6 <= X"00000003";
  ni1527_suif_tmp7 <= X"00000004";
  ni1528_suif_tmp8 <= X"00000004";
  ni1529_suif_tmp9 <= X"00000005";
  ni1530_suif_tmp10 <= X"00000005";
  ni1531_suif_tmp11 <= X"00000006";
  ni1532_suif_tmp12 <= X"00000006";
  ni1533_suif_tmp13 <= X"00000007";
  ni1534_suif_tmp14 <= X"00000007";
  ni1535_suif_tmp15 <= X"00000008";
  ni1536_suif_tmp16 <= X"00000008";
  ni1537_suif_tmp17 <= X"0000000a";
  ni1538_suif_tmp18 <= X"0000000a";
  ni1539_suif_tmp19 <= X"00000009";
  ni1540_suif_tmp20 <= X"00000009";
  ni1541_suif_tmp21 <= X"0000000b";
  ni1542_suif_tmp22 <= X"0000000b";
  ni1543_suif_tmp23 <= X"0000000f";
  ni1544_suif_tmp24 <= X"0000000f";
  ni1545_suif_tmp25 <= X"0000000e";
  ni1546_suif_tmp26 <= X"0000000e";
  ni1547_suif_tmp27 <= X"0000000d";
  ni1548_suif_tmp28 <= X"0000000d";
  ni1549_suif_tmp29 <= X"0000000c";
  ni1550_suif_tmp30 <= X"0000000c";

-- b20s0
  ni1603_suif_tmp61 <= "0000000000000000000000000000000" & neq(r_j, X"0000000a");
  ni1552_r_e_g_0 <= add(r_suif_tmp0(3 downto 0), X"0");

-- b20s1
  ni1251_state <= p_state_imm2;
  ni1551_suif_tmp45 <= X"000000" & ni1251_state;
  ni1553_r_e_g_0 <= add(r_suif_tmp(3 downto 0), X"0");

-- b20s2
  ti266_SBox <= r_suif_tmp45(7 downto 0);
  ni266_SBox <= p_SBox_imm;
  ni259_state <= ni266_SBox;

-- b20s3
  ni1555_r_e_g_0 <= add(r_suif_tmp2(3 downto 0), X"0");

-- b20s4
  ni1257_state <= p_state_imm2;
  ni1554_suif_tmp46 <= X"000000" & ni1257_state;
  ni1556_r_e_g_0 <= add(r_suif_tmp1(3 downto 0), X"0");

-- b20s5
  ti286_SBox <= r_suif_tmp46(7 downto 0);
  ni286_SBox <= p_SBox_imm;
  ni279_state <= ni286_SBox;

-- b20s6
  ni1558_r_e_g_0 <= add(r_suif_tmp4(3 downto 0), X"0");

-- b20s7
  ni1263_state <= p_state_imm2;
  ni1557_suif_tmp47 <= X"000000" & ni1263_state;
  ni1559_r_e_g_0 <= add(r_suif_tmp3(3 downto 0), X"0");

-- b20s8
  ti306_SBox <= r_suif_tmp47(7 downto 0);
  ni306_SBox <= p_SBox_imm;
  ni299_state <= ni306_SBox;

-- b20s9
  ni1561_r_e_g_0 <= add(r_suif_tmp6(3 downto 0), X"0");

-- b20s10
  ni1269_state <= p_state_imm2;
  ni1560_suif_tmp48 <= X"000000" & ni1269_state;
  ni1562_r_e_g_0 <= add(r_suif_tmp5(3 downto 0), X"0");

-- b20s11
  ti326_SBox <= r_suif_tmp48(7 downto 0);
  ni326_SBox <= p_SBox_imm;
  ni319_state <= ni326_SBox;

-- b20s12
  ni1564_r_e_g_0 <= add(r_suif_tmp7(3 downto 0), X"0");
  ni1567_r_e_g_2 <= add(r_suif_tmp9(3 downto 0), X"0");

-- b20s13
  ni1272_state <= p_state_imm2;
  ni1563_suif_tmp49 <= X"000000" & ni1272_state;
  ni1278_state <= p_state_imm;
  ni1566_suif_tmp50 <= X"000000" & ni1278_state;

-- b20s14
  ti341_SBox <= r_suif_tmp49(7 downto 0);
  ni341_SBox <= p_SBox_imm;
  ni1565_x <= X"000000" & ni341_SBox;
  ni1568_r_e_g_0 <= add(r_suif_tmp8(3 downto 0), X"0");

-- b20s15
  ti361_SBox <= r_suif_tmp50(7 downto 0);
  ni361_SBox <= p_SBox_imm;
  ni354_state <= ni361_SBox;

-- b20s16
  ni1570_r_e_g_0 <= add(r_suif_tmp11(3 downto 0), X"0");

-- b20s17
  ni1284_state <= p_state_imm2;
  ni1569_suif_tmp51 <= X"000000" & ni1284_state;
  ni1571_r_e_g_0 <= add(r_suif_tmp10(3 downto 0), X"0");

-- b20s18
  ti381_SBox <= r_suif_tmp51(7 downto 0);
  ni381_SBox <= p_SBox_imm;
  ni374_state <= ni381_SBox;

-- b20s19
  ni1573_r_e_g_0 <= add(r_suif_tmp13(3 downto 0), X"0");

-- b20s20
  ni1290_state <= p_state_imm2;
  ni1572_suif_tmp52 <= X"000000" & ni1290_state;
  ni1574_r_e_g_0 <= add(r_suif_tmp12(3 downto 0), X"0");

-- b20s21
  ti401_SBox <= r_suif_tmp52(7 downto 0);
  ni401_SBox <= p_SBox_imm;
  ni394_state <= ni401_SBox;
  ni1575_r_e_g_0 <= add(r_suif_tmp14(3 downto 0), X"0");

-- b20s22
  ni414_state <= r_x(7 downto 0);

-- b20s23
  ni1577_r_e_g_0 <= add(r_suif_tmp15(3 downto 0), X"0");
  ni1580_r_e_g_2 <= add(r_suif_tmp17(3 downto 0), X"0");

-- b20s24
  ni1296_state <= p_state_imm2;
  ni1576_suif_tmp53 <= X"000000" & ni1296_state;
  ni1302_state <= p_state_imm;
  ni1579_suif_tmp54 <= X"000000" & ni1302_state;

-- b20s25
  ti425_SBox <= r_suif_tmp53(7 downto 0);
  ni425_SBox <= p_SBox_imm;
  ni1578_x <= X"000000" & ni425_SBox;
  ni1581_r_e_g_0 <= add(r_suif_tmp16(3 downto 0), X"0");

-- b20s26
  ti445_SBox <= r_suif_tmp54(7 downto 0);
  ni445_SBox <= p_SBox_imm;
  ni438_state <= ni445_SBox;
  ni1582_r_e_g_0 <= add(r_suif_tmp18(3 downto 0), X"0");

-- b20s27
  ni458_state <= r_x(7 downto 0);

-- b20s28
  ni1584_r_e_g_0 <= add(r_suif_tmp19(3 downto 0), X"0");
  ni1587_r_e_g_2 <= add(r_suif_tmp21(3 downto 0), X"0");

-- b20s29
  ni1308_state <= p_state_imm2;
  ni1583_suif_tmp55 <= X"000000" & ni1308_state;
  ni1314_state <= p_state_imm;
  ni1586_suif_tmp56 <= X"000000" & ni1314_state;

-- b20s30
  ti469_SBox <= r_suif_tmp55(7 downto 0);
  ni469_SBox <= p_SBox_imm;
  ni1585_x <= X"000000" & ni469_SBox;
  ni1588_r_e_g_0 <= add(r_suif_tmp20(3 downto 0), X"0");

-- b20s31
  ti489_SBox <= r_suif_tmp56(7 downto 0);
  ni489_SBox <= p_SBox_imm;
  ni482_state <= ni489_SBox;
  ni1589_r_e_g_0 <= add(r_suif_tmp22(3 downto 0), X"0");

-- b20s32
  ni502_state <= r_x(7 downto 0);

-- b20s33
  ni1591_r_e_g_0 <= add(r_suif_tmp23(3 downto 0), X"0");
  ni1594_r_e_g_2 <= add(r_suif_tmp25(3 downto 0), X"0");

-- b20s34
  ni1320_state <= p_state_imm2;
  ni1590_suif_tmp57 <= X"000000" & ni1320_state;
  ni1326_state <= p_state_imm;
  ni1593_suif_tmp58 <= X"000000" & ni1326_state;

-- b20s35
  ti513_SBox <= r_suif_tmp57(7 downto 0);
  ni513_SBox <= p_SBox_imm;
  ni1592_x <= X"000000" & ni513_SBox;
  ni1595_r_e_g_0 <= add(r_suif_tmp24(3 downto 0), X"0");

-- b20s36
  ti533_SBox <= r_suif_tmp58(7 downto 0);
  ni533_SBox <= p_SBox_imm;
  ni526_state <= ni533_SBox;

-- b20s37
  ni1597_r_e_g_0 <= add(r_suif_tmp27(3 downto 0), X"0");

-- b20s38
  ni1332_state <= p_state_imm2;
  ni1596_suif_tmp59 <= X"000000" & ni1332_state;
  ni1598_r_e_g_0 <= add(r_suif_tmp26(3 downto 0), X"0");

-- b20s39
  ti553_SBox <= r_suif_tmp59(7 downto 0);
  ni553_SBox <= p_SBox_imm;
  ni546_state <= ni553_SBox;

-- b20s40
  ni1600_r_e_g_0 <= add(r_suif_tmp29(3 downto 0), X"0");

-- b20s41
  ni1338_state <= p_state_imm2;
  ni1599_suif_tmp60 <= X"000000" & ni1338_state;
  ni1601_r_e_g_0 <= add(r_suif_tmp28(3 downto 0), X"0");

-- b20s42
  ti573_SBox <= r_suif_tmp60(7 downto 0);
  ni573_SBox <= p_SBox_imm;
  ni566_state <= ni573_SBox;
  ni1602_r_e_g_0 <= add(r_suif_tmp30(3 downto 0), X"0");

-- b20s43
  ni586_state <= r_x(7 downto 0);

-- b21s0
  ni1604_i <= X"00000000";

-- b22s0
  ni1607_r_e_g_0 <= add(X"0", r_i(3 downto 0));

-- b22s1
  ni614_state <= p_state_imm2;
  ni1606_suif_tmp63 <= "0000000000000000000000000000000" & neq(X"000000" & ni614_state and X"00000080", X"00000000");

-- b23s0
  ni1608_suif_tmp_6 <= X"0000001b";

-- b24s0
  ni1609_suif_tmp_6 <= X"00000000";

-- b25s0
  ni1611_r_e_g_0 <= add(X"4", r_i(3 downto 0));

-- b25s1
  ni632_state <= p_state_imm2;
  ni1610_suif_tmp64 <= "0000000000000000000000000000000" & neq(X"000000" & ni632_state and X"00000080", X"00000000");

-- b26s0
  ni1612_suif_tmp0_2 <= X"0000001b";

-- b27s0
  ni1613_suif_tmp0_2 <= X"00000000";

-- b28s0
  ni1615_r_e_g_0 <= add(X"0", r_i(3 downto 0));
  ni1616_r_e_g_2 <= add(X"4", r_i(3 downto 0));

-- b28s1
  ni665_state <= p_state_imm2;
  ni680_state <= p_state_imm;
  ni1617_r_e_g_0 <= add(X"4", r_i(3 downto 0));
  ni1618_r_e_g_2 <= add(X"8", r_i(3 downto 0));

-- b28s2
  ni692_state <= p_state_imm2;
  ni702_state <= p_state_imm;
  ni1619_r_e_g_0 <= add(X"c", r_i(3 downto 0));
  ni1614_r_e_g_2 <= add(X"0", r_i(3 downto 0));
  ni1621_r_e_g_3 <= add(X"4", r_i(3 downto 0));

-- b28s3
  ni712_state <= p_state_imm2;
  ni642_stateTemp <= ((((shl(r_r_e_g_1, 1) xor r_suif_tmp_6(7 downto 0)) xor shl(r_r_e_g_4, 1) xor r_suif_tmp0_2(7 downto 0)) xor r_r_e_g_5) xor r_r_e_g_6) xor ni712_state;
  ni727_state <= p_state_imm;
  ni1620_suif_tmp65 <= "0000000000000000000000000000000" & neq(X"000000" & ni727_state and X"00000080", X"00000000");

-- b29s0
  ni1622_suif_tmp2_0 <= X"0000001b";

-- b30s0
  ni1623_suif_tmp2_0 <= X"00000000";

-- b31s0
  ni1625_r_e_g_0 <= add(X"8", r_i(3 downto 0));

-- b31s1
  ni745_state <= p_state_imm2;
  ni1624_suif_tmp66 <= "0000000000000000000000000000000" & neq(X"000000" & ni745_state and X"00000080", X"00000000");

-- b32s0
  ni1626_suif_tmp3_0 <= X"0000001b";

-- b33s0
  ni1627_suif_tmp3_0 <= X"00000000";

-- b34s0
  ni1629_r_e_g_0 <= add(X"0", r_i(3 downto 0));
  ni1630_r_e_g_2 <= add(X"4", r_i(3 downto 0));

-- b34s1
  ni775_state <= p_state_imm2;
  ni788_state <= p_state_imm;
  ni1631_r_e_g_0 <= add(X"8", r_i(3 downto 0));
  ni1632_r_e_g_2 <= add(X"8", r_i(3 downto 0));

-- b34s2
  ni803_state <= p_state_imm2;
  ni815_state <= p_state_imm;
  ni1633_r_e_g_0 <= add(X"c", r_i(3 downto 0));
  ni1628_r_e_g_2 <= add(X"4", r_i(3 downto 0));
  ni1635_r_e_g_3 <= add(X"8", r_i(3 downto 0));

-- b34s3
  ni825_state <= p_state_imm2;
  ni755_stateTemp <= (((r_r_e_g_1 xor shl(r_r_e_g_4, 1) xor r_suif_tmp2_0(7 downto 0)) xor shl(r_r_e_g_5, 1) xor r_suif_tmp3_0(7 downto 0)) xor r_r_e_g_6) xor ni825_state;
  ni840_state <= p_state_imm;
  ni1634_suif_tmp67 <= "0000000000000000000000000000000" & neq(X"000000" & ni840_state and X"00000080", X"00000000");

-- b35s0
  ni1636_suif_tmp5_0 <= X"0000001b";

-- b36s0
  ni1637_suif_tmp5_0 <= X"00000000";

-- b37s0
  ni1639_r_e_g_0 <= add(X"c", r_i(3 downto 0));

-- b37s1
  ni858_state <= p_state_imm2;
  ni1638_suif_tmp68 <= "0000000000000000000000000000000" & neq(X"000000" & ni858_state and X"00000080", X"00000000");

-- b38s0
  ni1640_suif_tmp6_0 <= X"0000001b";

-- b39s0
  ni1641_suif_tmp6_0 <= X"00000000";

-- b40s0
  ni1643_r_e_g_0 <= add(X"0", r_i(3 downto 0));
  ni1644_r_e_g_2 <= add(X"4", r_i(3 downto 0));

-- b40s1
  ni888_state <= p_state_imm2;
  ni898_state <= p_state_imm;
  ni1645_r_e_g_0 <= add(X"8", r_i(3 downto 0));
  ni1646_r_e_g_2 <= add(X"c", r_i(3 downto 0));

-- b40s2
  ni911_state <= p_state_imm2;
  ni926_state <= p_state_imm;
  ni1647_r_e_g_0 <= add(X"c", r_i(3 downto 0));
  ni1642_r_e_g_2 <= add(X"8", r_i(3 downto 0));
  ni1649_r_e_g_3 <= add(X"0", r_i(3 downto 0));

-- b40s3
  ni938_state <= p_state_imm2;
  ni868_stateTemp <= (((r_r_e_g_1 xor r_r_e_g_4) xor shl(r_r_e_g_5, 1) xor r_suif_tmp5_0(7 downto 0)) xor shl(r_r_e_g_6, 1) xor r_suif_tmp6_0(7 downto 0)) xor ni938_state;
  ni953_state <= p_state_imm;
  ni1648_suif_tmp69 <= "0000000000000000000000000000000" & neq(X"000000" & ni953_state and X"00000080", X"00000000");

-- b41s0
  ni1650_suif_tmp8_0 <= X"0000001b";

-- b42s0
  ni1651_suif_tmp8_0 <= X"00000000";

-- b43s0
  ni1653_r_e_g_0 <= add(X"c", r_i(3 downto 0));

-- b43s1
  ni971_state <= p_state_imm2;
  ni1652_suif_tmp70 <= "0000000000000000000000000000000" & neq(X"000000" & ni971_state and X"00000080", X"00000000");

-- b44s0
  ni1654_suif_tmp9_0 <= X"0000001b";

-- b45s0
  ni1655_suif_tmp9_0 <= X"00000000";

-- b46s0
  ni1662_i <= add(r_i, X"00000001");
  ni1605_suif_tmp62 <= "0000000000000000000000000000000" & cmp_less_u(ni1662_i, X"00000004");
  ni1657_r_e_g_0 <= add(X"0", r_i(3 downto 0));
  ni1658_r_e_g_2 <= add(X"0", r_i(3 downto 0));
  ni1029_r_e_g_3 <= r_i(3 downto 0);
  ni1039_r_e_g_7 <= r_i(3 downto 0);
  ni1052_r_e_g_8 <= r_i(3 downto 0);
  ni985_r_e_g_9 <= r_i(3 downto 0);

-- b46s1
  ni1004_state <= p_state_imm2;
  ni1016_state <= p_state_imm;
  ni1659_r_e_g_0 <= add(X"4", r_r_e_g_3);
  ni1660_r_e_g_2 <= add(X"8", r_r_e_g_7);

-- b46s2
  ni1026_state <= p_state_imm2;
  ni1036_state <= p_state_imm;
  ni1661_r_e_g_0 <= add(X"c", r_r_e_g_8);
  ni1656_r_e_g_2 <= add(X"c", r_r_e_g_9);

-- b46s3
  ni1049_state <= p_state_imm2;
  ni981_stateTemp <= ((((shl(r_r_e_g_1, 1) xor r_suif_tmp8_0(7 downto 0)) xor r_r_e_g_4) xor r_r_e_g_5) xor r_r_e_g_6) xor shl(ni1049_state, 1) xor r_suif_tmp9_0(7 downto 0);

-- b47s0
  ni1663_i <= X"00000000";

-- b48s0
  ni1665_k <= X"00000000";
  ni1666_suif_tmp72 <= "0000000000000000000000000000000" & cmp_less_u(ni1665_k, X"00000004");

-- b49s0
  ni1667_suif_tmp_7 <= r_i;
  ni1668_suif_tmp0_3 <= r_i;

-- b50s0
  ni1671_k <= add(r_k, X"00000001");
  ni1672_suif_tmp73 <= "0000000000000000000000000000000" & cmp_less_u(ni1671_k, X"00000004");
  ni1670_r_e_g_0 <= add(shl(r_suif_tmp0_3(3 downto 0), 2), r_k(3 downto 0));
  ni1669_r_e_g_2 <= add(shl(r_suif_tmp_7(3 downto 0), 2), r_k(3 downto 0));

-- b50s1
  ni1082_stateTemp <= p_stateTemp_imm2;
  ni1075_state <= ni1082_stateTemp;

-- b51s0
  ni1673_i <= add(r_i, X"00000001");
  ni1664_suif_tmp71 <= "0000000000000000000000000000000" & cmp_less_u(ni1673_i, X"00000004");

-- b52s0
  ni1674_i <= X"00000000";
  ni1675_suif_tmp74 <= "0000000000000000000000000000000" & cmp_less_u(ni1674_i, X"00000004");

-- b53s0
  ni1676_suif_tmp_5 <= r_j;

-- b54s0
  ni1677_k <= X"00000000";
  ni1678_suif_tmp76 <= "0000000000000000000000000000000" & cmp_less_u(ni1677_k, X"00000004");

-- b55s0
  ni1679_suif_tmp_8 <= r_i;
  ni1680_suif_tmp0_4 <= r_i;

-- b56s0
  ni1681_suif_tmp_9 <= add(shl(r_suif_tmp_8, 2), r_k);
  ni1685_k <= add(r_k, X"00000001");
  ni1686_suif_tmp77 <= "0000000000000000000000000000000" & cmp_less_u(ni1685_k, X"00000004");
  ni1683_r_e_g_0 <= add(ni1681_suif_tmp_9(3 downto 0), X"0");
  ni1684_r_e_g_1 <= add(shl(add(shl(r_suif_tmp_5(7 downto 0), 2), r_suif_tmp0_4(7 downto 0)), 2), r_k(7 downto 0));
  ni1682_r_e_g_2 <= add(ni1681_suif_tmp_9(3 downto 0), X"0");

-- b56s1
  ni1347_state <= p_state_imm2;
  ni1131_expandedKey <= p_expandedKey_imm2;
  ni1119_state <= ni1347_state xor ni1131_expandedKey;

-- b57s0
  ni1687_i <= add(r_i, X"00000001");
  ni1688_suif_tmp75 <= "0000000000000000000000000000000" & cmp_less_u(ni1687_i, X"00000004");

-- b58s0
  ni1689_j <= add(r_j, X"00000001");
  ni1690_suif_tmp44 <= "0000000000000000000000000000000" & cmp_less_equal_u(ni1689_j, X"0000000a");

-- b59s0
  ni1691_i <= X"00000000";

-- b60s0
  ni1693_j <= X"00000000";
  ni1694_suif_tmp79 <= "0000000000000000000000000000000" & cmp_less_u(ni1693_j, X"00000004");

-- b61s0
  ni1695_suif_tmp_10 <= r_i;

-- b62s0
  ni1698_j <= add(r_j, X"00000001");
  ni1699_suif_tmp80 <= "0000000000000000000000000000000" & cmp_less_u(ni1698_j, X"00000004");
  ni1697_r_e_g_0 <= add(shl(r_suif_tmp_10(3 downto 0), 2), r_j(3 downto 0));

-- b62s1
  ni1186_state <= p_state_imm2;
  ni1696_suif_tmp81 <= ni1186_state;

-- b63s0
  ni1700_i <= add(r_i, X"00000001");
  ni1692_suif_tmp78 <= "0000000000000000000000000000000" & cmp_less_u(ni1700_i, X"00000004");

-- b64s0

-- 


  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b0s0 =>
        if (stateEn = '1') then
          r_trigger <= ni1466_trigger;
        end if;
      when b3s0 =>
        if (stateEn = '1') then
          r_trigger <= ni1477_trigger;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b0s0 =>
        if (stateEn = '1') then
          r_j <= ni1467_j;
        end if;
      when b1s1 =>
        if (stateEn = '1') then
          r_j <= ni1472_j;
        end if;
      when b2s0 =>
        if (stateEn = '1') then
          r_j <= ni1476_j;
        end if;
      when b3s0 =>
        if (stateEn = '1') then
          r_j <= ni1479_j;
        end if;
      when b5s0 =>
        if (stateEn = '1') then
          r_j <= ni1487_j;
        end if;
      when b7s0 =>
        if (stateEn = '1') then
          r_j <= ni1491_j;
        end if;
      when b9s0 =>
        if (stateEn = '1') then
          r_j <= ni1494_j;
        end if;
      when b11s0 =>
        if (stateEn = '1') then
          r_j <= ni1500_j;
        end if;
      when b14s0 =>
        if (stateEn = '1') then
          r_j <= ni1506_j;
        end if;
      when b16s0 =>
        if (stateEn = '1') then
          r_j <= ni1514_j;
        end if;
      when b18s0 =>
        if (stateEn = '1') then
          r_j <= ni1517_j;
        end if;
      when b58s0 =>
        if (stateEn = '1') then
          r_j <= ni1689_j;
        end if;
      when b60s0 =>
        if (stateEn = '1') then
          r_j <= ni1693_j;
        end if;
      when b62s0 =>
        if (stateEn = '1') then
          r_j <= ni1698_j;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b0s0 =>
        if (stateEn = '1') then
          r_i <= ni1468_i;
        end if;
      when b2s0 =>
        if (stateEn = '1') then
          r_i <= ni1475_i;
        end if;
      when b3s0 =>
        if (stateEn = '1') then
          r_i <= ni1480_i;
        end if;
      when b7s0 =>
        if (stateEn = '1') then
          r_i <= ni1490_i;
        end if;
      when b8s0 =>
        if (stateEn = '1') then
          r_i <= ni1492_i;
        end if;
      when b12s0 =>
        if (stateEn = '1') then
          r_i <= ni1502_i;
        end if;
      when b13s0 =>
        if (stateEn = '1') then
          r_i <= ni1504_i;
        end if;
      when b17s0 =>
        if (stateEn = '1') then
          r_i <= ni1516_i;
        end if;
      when b21s0 =>
        if (stateEn = '1') then
          r_i <= ni1604_i;
        end if;
      when b46s0 =>
        if (stateEn = '1') then
          r_i <= ni1662_i;
        end if;
      when b47s0 =>
        if (stateEn = '1') then
          r_i <= ni1663_i;
        end if;
      when b51s0 =>
        if (stateEn = '1') then
          r_i <= ni1673_i;
        end if;
      when b52s0 =>
        if (stateEn = '1') then
          r_i <= ni1674_i;
        end if;
      when b57s0 =>
        if (stateEn = '1') then
          r_i <= ni1687_i;
        end if;
      when b59s0 =>
        if (stateEn = '1') then
          r_i <= ni1691_i;
        end if;
      when b63s0 =>
        if (stateEn = '1') then
          r_i <= ni1700_i;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b1s0 =>
        if (stateEn = '1') then
          r_suif_tmp31 <= ni1469_suif_tmp31;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b1s1 =>
        if (stateEn = '1') then
          r_streamByte <= ni1470_streamByte;
        end if;
      when b4s1 =>
        if (stateEn = '1') then
          r_streamByte <= ni1482_streamByte;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b1s1 =>
        if (stateEn = '1') then
          r_suif_tmp_0 <= ni1471_suif_tmp_0;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b1s1 =>
        if (stateEn = '1') then
          r_suif_tmp32 <= ni1474_suif_tmp32;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b1s1 =>
        if (stateEn = '1') then
          r_r_e_g_0 <= ni1473_r_e_g_0;
        end if;
      when b11s0 =>
        if (stateEn = '1') then
          r_r_e_g_0 <= ni1498_r_e_g_0;
        end if;
      when b16s0 =>
        if (stateEn = '1') then
          r_r_e_g_0 <= ni1512_r_e_g_0;
        end if;
      when b20s0 =>
        if (stateEn = '1') then
          r_r_e_g_0 <= ni1552_r_e_g_0;
        end if;
      when b20s1 =>
        if (stateEn = '1') then
          r_r_e_g_0 <= ni1553_r_e_g_0;
        end if;
      when b20s3 =>
        if (stateEn = '1') then
          r_r_e_g_0 <= ni1555_r_e_g_0;
        end if;
      when b20s4 =>
        if (stateEn = '1') then
          r_r_e_g_0 <= ni1556_r_e_g_0;
        end if;
      when b20s6 =>
        if (stateEn = '1') then
          r_r_e_g_0 <= ni1558_r_e_g_0;
        end if;
      when b20s7 =>
        if (stateEn = '1') then
          r_r_e_g_0 <= ni1559_r_e_g_0;
        end if;
      when b20s9 =>
        if (stateEn = '1') then
          r_r_e_g_0 <= ni1561_r_e_g_0;
        end if;
      when b20s10 =>
        if (stateEn = '1') then
          r_r_e_g_0 <= ni1562_r_e_g_0;
        end if;
      when b20s12 =>
        if (stateEn = '1') then
          r_r_e_g_0 <= ni1564_r_e_g_0;
        end if;
      when b20s14 =>
        if (stateEn = '1') then
          r_r_e_g_0 <= ni1568_r_e_g_0;
        end if;
      when b20s16 =>
        if (stateEn = '1') then
          r_r_e_g_0 <= ni1570_r_e_g_0;
        end if;
      when b20s17 =>
        if (stateEn = '1') then
          r_r_e_g_0 <= ni1571_r_e_g_0;
        end if;
      when b20s19 =>
        if (stateEn = '1') then
          r_r_e_g_0 <= ni1573_r_e_g_0;
        end if;
      when b20s20 =>
        if (stateEn = '1') then
          r_r_e_g_0 <= ni1574_r_e_g_0;
        end if;
      when b20s21 =>
        if (stateEn = '1') then
          r_r_e_g_0 <= ni1575_r_e_g_0;
        end if;
      when b20s23 =>
        if (stateEn = '1') then
          r_r_e_g_0 <= ni1577_r_e_g_0;
        end if;
      when b20s25 =>
        if (stateEn = '1') then
          r_r_e_g_0 <= ni1581_r_e_g_0;
        end if;
      when b20s26 =>
        if (stateEn = '1') then
          r_r_e_g_0 <= ni1582_r_e_g_0;
        end if;
      when b20s28 =>
        if (stateEn = '1') then
          r_r_e_g_0 <= ni1584_r_e_g_0;
        end if;
      when b20s30 =>
        if (stateEn = '1') then
          r_r_e_g_0 <= ni1588_r_e_g_0;
        end if;
      when b20s31 =>
        if (stateEn = '1') then
          r_r_e_g_0 <= ni1589_r_e_g_0;
        end if;
      when b20s33 =>
        if (stateEn = '1') then
          r_r_e_g_0 <= ni1591_r_e_g_0;
        end if;
      when b20s35 =>
        if (stateEn = '1') then
          r_r_e_g_0 <= ni1595_r_e_g_0;
        end if;
      when b20s37 =>
        if (stateEn = '1') then
          r_r_e_g_0 <= ni1597_r_e_g_0;
        end if;
      when b20s38 =>
        if (stateEn = '1') then
          r_r_e_g_0 <= ni1598_r_e_g_0;
        end if;
      when b20s40 =>
        if (stateEn = '1') then
          r_r_e_g_0 <= ni1600_r_e_g_0;
        end if;
      when b20s41 =>
        if (stateEn = '1') then
          r_r_e_g_0 <= ni1601_r_e_g_0;
        end if;
      when b20s42 =>
        if (stateEn = '1') then
          r_r_e_g_0 <= ni1602_r_e_g_0;
        end if;
      when b22s0 =>
        if (stateEn = '1') then
          r_r_e_g_0 <= ni1607_r_e_g_0;
        end if;
      when b25s0 =>
        if (stateEn = '1') then
          r_r_e_g_0 <= ni1611_r_e_g_0;
        end if;
      when b28s0 =>
        if (stateEn = '1') then
          r_r_e_g_0 <= ni1615_r_e_g_0;
        end if;
      when b28s1 =>
        if (stateEn = '1') then
          r_r_e_g_0 <= ni1617_r_e_g_0;
        end if;
      when b28s2 =>
        if (stateEn = '1') then
          r_r_e_g_0 <= ni1619_r_e_g_0;
        end if;
      when b31s0 =>
        if (stateEn = '1') then
          r_r_e_g_0 <= ni1625_r_e_g_0;
        end if;
      when b34s0 =>
        if (stateEn = '1') then
          r_r_e_g_0 <= ni1629_r_e_g_0;
        end if;
      when b34s1 =>
        if (stateEn = '1') then
          r_r_e_g_0 <= ni1631_r_e_g_0;
        end if;
      when b34s2 =>
        if (stateEn = '1') then
          r_r_e_g_0 <= ni1633_r_e_g_0;
        end if;
      when b37s0 =>
        if (stateEn = '1') then
          r_r_e_g_0 <= ni1639_r_e_g_0;
        end if;
      when b40s0 =>
        if (stateEn = '1') then
          r_r_e_g_0 <= ni1643_r_e_g_0;
        end if;
      when b40s1 =>
        if (stateEn = '1') then
          r_r_e_g_0 <= ni1645_r_e_g_0;
        end if;
      when b40s2 =>
        if (stateEn = '1') then
          r_r_e_g_0 <= ni1647_r_e_g_0;
        end if;
      when b43s0 =>
        if (stateEn = '1') then
          r_r_e_g_0 <= ni1653_r_e_g_0;
        end if;
      when b46s0 =>
        if (stateEn = '1') then
          r_r_e_g_0 <= ni1657_r_e_g_0;
        end if;
      when b46s1 =>
        if (stateEn = '1') then
          r_r_e_g_0 <= ni1659_r_e_g_0;
        end if;
      when b46s2 =>
        if (stateEn = '1') then
          r_r_e_g_0 <= ni1661_r_e_g_0;
        end if;
      when b50s0 =>
        if (stateEn = '1') then
          r_r_e_g_0 <= ni1670_r_e_g_0;
        end if;
      when b56s0 =>
        if (stateEn = '1') then
          r_r_e_g_0 <= ni1683_r_e_g_0;
        end if;
      when b62s0 =>
        if (stateEn = '1') then
          r_r_e_g_0 <= ni1697_r_e_g_0;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b3s0 =>
        if (stateEn = '1') then
          r_k <= ni1478_k;
        end if;
      when b4s1 =>
        if (stateEn = '1') then
          r_k <= ni1484_k;
        end if;
      when b5s0 =>
        if (stateEn = '1') then
          r_k <= ni1488_k;
        end if;
      when b48s0 =>
        if (stateEn = '1') then
          r_k <= ni1665_k;
        end if;
      when b50s0 =>
        if (stateEn = '1') then
          r_k <= ni1671_k;
        end if;
      when b54s0 =>
        if (stateEn = '1') then
          r_k <= ni1677_k;
        end if;
      when b56s0 =>
        if (stateEn = '1') then
          r_k <= ni1685_k;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b4s0 =>
        if (stateEn = '1') then
          r_suif_tmp33 <= ni1481_suif_tmp33;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b4s1 =>
        if (stateEn = '1') then
          r_suif_tmp_1 <= ni1483_suif_tmp_1;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b4s1 =>
        if (stateEn = '1') then
          r_suif_tmp34 <= ni1486_suif_tmp34;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b4s1 =>
        if (stateEn = '1') then
          r_r_e_g_1 <= ni1485_r_e_g_1;
        end if;
      when b11s0 =>
        if (stateEn = '1') then
          r_r_e_g_1 <= ni1499_r_e_g_1;
        end if;
      when b28s1 =>
        if (stateEn = '1') then
          r_r_e_g_1 <= ni665_state;
        end if;
      when b34s1 =>
        if (stateEn = '1') then
          r_r_e_g_1 <= ni775_state;
        end if;
      when b40s1 =>
        if (stateEn = '1') then
          r_r_e_g_1 <= ni888_state;
        end if;
      when b46s1 =>
        if (stateEn = '1') then
          r_r_e_g_1 <= ni1004_state;
        end if;
      when b56s0 =>
        if (stateEn = '1') then
          r_r_e_g_1 <= ni1684_r_e_g_1;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b6s0 =>
        if (stateEn = '1') then
          r_suif_tmp35 <= ni1489_suif_tmp35;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b9s0 =>
        if (stateEn = '1') then
          r_suif_tmp38 <= ni1495_suif_tmp38;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b10s0 =>
        if (stateEn = '1') then
          r_suif_tmp_2 <= ni1496_suif_tmp_2;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b10s0 =>
        if (stateEn = '1') then
          r_suif_tmp0_0 <= ni1497_suif_tmp0_0;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b11s0 =>
        if (stateEn = '1') then
          r_suif_tmp39 <= ni1501_suif_tmp39;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b12s0 =>
        if (stateEn = '1') then
          r_suif_tmp37 <= ni1493_suif_tmp37;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b13s0 =>
        if (stateEn = '1') then
          r_suif_tmp36 <= ni1503_suif_tmp36;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b14s0 =>
        if (stateEn = '1') then
          r_suif_tmp41 <= ni1507_suif_tmp41;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b15s0 =>
        if (stateEn = '1') then
          r_suif_tmp_3 <= ni1508_suif_tmp_3;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b15s0 =>
        if (stateEn = '1') then
          r_suif_tmp0_1 <= ni1509_suif_tmp0_1;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b16s0 =>
        if (stateEn = '1') then
          r_suif_tmp_4 <= ni1510_suif_tmp_4;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b16s0 =>
        if (stateEn = '1') then
          r_suif_tmp42 <= ni1515_suif_tmp42;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b16s0 =>
        if (stateEn = '1') then
          r_r_e_g_2 <= ni1513_r_e_g_2;
        end if;
      when b20s12 =>
        if (stateEn = '1') then
          r_r_e_g_2 <= ni1567_r_e_g_2;
        end if;
      when b20s23 =>
        if (stateEn = '1') then
          r_r_e_g_2 <= ni1580_r_e_g_2;
        end if;
      when b20s28 =>
        if (stateEn = '1') then
          r_r_e_g_2 <= ni1587_r_e_g_2;
        end if;
      when b20s33 =>
        if (stateEn = '1') then
          r_r_e_g_2 <= ni1594_r_e_g_2;
        end if;
      when b28s0 =>
        if (stateEn = '1') then
          r_r_e_g_2 <= ni1616_r_e_g_2;
        end if;
      when b28s1 =>
        if (stateEn = '1') then
          r_r_e_g_2 <= ni1618_r_e_g_2;
        end if;
      when b28s2 =>
        if (stateEn = '1') then
          r_r_e_g_2 <= ni1614_r_e_g_2;
        end if;
      when b34s0 =>
        if (stateEn = '1') then
          r_r_e_g_2 <= ni1630_r_e_g_2;
        end if;
      when b34s1 =>
        if (stateEn = '1') then
          r_r_e_g_2 <= ni1632_r_e_g_2;
        end if;
      when b34s2 =>
        if (stateEn = '1') then
          r_r_e_g_2 <= ni1628_r_e_g_2;
        end if;
      when b40s0 =>
        if (stateEn = '1') then
          r_r_e_g_2 <= ni1644_r_e_g_2;
        end if;
      when b40s1 =>
        if (stateEn = '1') then
          r_r_e_g_2 <= ni1646_r_e_g_2;
        end if;
      when b40s2 =>
        if (stateEn = '1') then
          r_r_e_g_2 <= ni1642_r_e_g_2;
        end if;
      when b46s0 =>
        if (stateEn = '1') then
          r_r_e_g_2 <= ni1658_r_e_g_2;
        end if;
      when b46s1 =>
        if (stateEn = '1') then
          r_r_e_g_2 <= ni1660_r_e_g_2;
        end if;
      when b46s2 =>
        if (stateEn = '1') then
          r_r_e_g_2 <= ni1656_r_e_g_2;
        end if;
      when b50s0 =>
        if (stateEn = '1') then
          r_r_e_g_2 <= ni1669_r_e_g_2;
        end if;
      when b56s0 =>
        if (stateEn = '1') then
          r_r_e_g_2 <= ni1682_r_e_g_2;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b16s0 =>
        if (stateEn = '1') then
          r_r_e_g_3 <= ni1511_r_e_g_3;
        end if;
      when b28s2 =>
        if (stateEn = '1') then
          r_r_e_g_3 <= ni1621_r_e_g_3;
        end if;
      when b34s2 =>
        if (stateEn = '1') then
          r_r_e_g_3 <= ni1635_r_e_g_3;
        end if;
      when b40s2 =>
        if (stateEn = '1') then
          r_r_e_g_3 <= ni1649_r_e_g_3;
        end if;
      when b46s0 =>
        if (stateEn = '1') then
          r_r_e_g_3 <= ni1029_r_e_g_3;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b17s0 =>
        if (stateEn = '1') then
          r_suif_tmp40 <= ni1505_suif_tmp40;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b18s0 =>
        if (stateEn = '1') then
          r_suif_tmp43 <= ni1518_suif_tmp43;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b19s0 =>
        if (stateEn = '1') then
          r_suif_tmp <= ni1519_suif_tmp;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b19s0 =>
        if (stateEn = '1') then
          r_suif_tmp0 <= ni1520_suif_tmp0;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b19s0 =>
        if (stateEn = '1') then
          r_suif_tmp1 <= ni1521_suif_tmp1;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b19s0 =>
        if (stateEn = '1') then
          r_suif_tmp2 <= ni1522_suif_tmp2;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b19s0 =>
        if (stateEn = '1') then
          r_suif_tmp3 <= ni1523_suif_tmp3;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b19s0 =>
        if (stateEn = '1') then
          r_suif_tmp4 <= ni1524_suif_tmp4;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b19s0 =>
        if (stateEn = '1') then
          r_suif_tmp5 <= ni1525_suif_tmp5;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b19s0 =>
        if (stateEn = '1') then
          r_suif_tmp6 <= ni1526_suif_tmp6;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b19s0 =>
        if (stateEn = '1') then
          r_suif_tmp7 <= ni1527_suif_tmp7;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b19s0 =>
        if (stateEn = '1') then
          r_suif_tmp8 <= ni1528_suif_tmp8;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b19s0 =>
        if (stateEn = '1') then
          r_suif_tmp9 <= ni1529_suif_tmp9;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b19s0 =>
        if (stateEn = '1') then
          r_suif_tmp10 <= ni1530_suif_tmp10;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b19s0 =>
        if (stateEn = '1') then
          r_suif_tmp11 <= ni1531_suif_tmp11;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b19s0 =>
        if (stateEn = '1') then
          r_suif_tmp12 <= ni1532_suif_tmp12;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b19s0 =>
        if (stateEn = '1') then
          r_suif_tmp13 <= ni1533_suif_tmp13;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b19s0 =>
        if (stateEn = '1') then
          r_suif_tmp14 <= ni1534_suif_tmp14;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b19s0 =>
        if (stateEn = '1') then
          r_suif_tmp15 <= ni1535_suif_tmp15;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b19s0 =>
        if (stateEn = '1') then
          r_suif_tmp16 <= ni1536_suif_tmp16;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b19s0 =>
        if (stateEn = '1') then
          r_suif_tmp17 <= ni1537_suif_tmp17;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b19s0 =>
        if (stateEn = '1') then
          r_suif_tmp18 <= ni1538_suif_tmp18;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b19s0 =>
        if (stateEn = '1') then
          r_suif_tmp19 <= ni1539_suif_tmp19;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b19s0 =>
        if (stateEn = '1') then
          r_suif_tmp20 <= ni1540_suif_tmp20;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b19s0 =>
        if (stateEn = '1') then
          r_suif_tmp21 <= ni1541_suif_tmp21;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b19s0 =>
        if (stateEn = '1') then
          r_suif_tmp22 <= ni1542_suif_tmp22;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b19s0 =>
        if (stateEn = '1') then
          r_suif_tmp23 <= ni1543_suif_tmp23;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b19s0 =>
        if (stateEn = '1') then
          r_suif_tmp24 <= ni1544_suif_tmp24;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b19s0 =>
        if (stateEn = '1') then
          r_suif_tmp25 <= ni1545_suif_tmp25;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b19s0 =>
        if (stateEn = '1') then
          r_suif_tmp26 <= ni1546_suif_tmp26;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b19s0 =>
        if (stateEn = '1') then
          r_suif_tmp27 <= ni1547_suif_tmp27;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b19s0 =>
        if (stateEn = '1') then
          r_suif_tmp28 <= ni1548_suif_tmp28;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b19s0 =>
        if (stateEn = '1') then
          r_suif_tmp29 <= ni1549_suif_tmp29;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b19s0 =>
        if (stateEn = '1') then
          r_suif_tmp30 <= ni1550_suif_tmp30;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b20s0 =>
        if (stateEn = '1') then
          r_suif_tmp61 <= ni1603_suif_tmp61;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b20s1 =>
        if (stateEn = '1') then
          r_suif_tmp45 <= ni1551_suif_tmp45;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b20s4 =>
        if (stateEn = '1') then
          r_suif_tmp46 <= ni1554_suif_tmp46;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b20s7 =>
        if (stateEn = '1') then
          r_suif_tmp47 <= ni1557_suif_tmp47;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b20s10 =>
        if (stateEn = '1') then
          r_suif_tmp48 <= ni1560_suif_tmp48;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b20s13 =>
        if (stateEn = '1') then
          r_suif_tmp49 <= ni1563_suif_tmp49;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b20s13 =>
        if (stateEn = '1') then
          r_suif_tmp50 <= ni1566_suif_tmp50;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b20s14 =>
        if (stateEn = '1') then
          r_x <= ni1565_x;
        end if;
      when b20s25 =>
        if (stateEn = '1') then
          r_x <= ni1578_x;
        end if;
      when b20s30 =>
        if (stateEn = '1') then
          r_x <= ni1585_x;
        end if;
      when b20s35 =>
        if (stateEn = '1') then
          r_x <= ni1592_x;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b20s17 =>
        if (stateEn = '1') then
          r_suif_tmp51 <= ni1569_suif_tmp51;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b20s20 =>
        if (stateEn = '1') then
          r_suif_tmp52 <= ni1572_suif_tmp52;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b20s24 =>
        if (stateEn = '1') then
          r_suif_tmp53 <= ni1576_suif_tmp53;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b20s24 =>
        if (stateEn = '1') then
          r_suif_tmp54 <= ni1579_suif_tmp54;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b20s29 =>
        if (stateEn = '1') then
          r_suif_tmp55 <= ni1583_suif_tmp55;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b20s29 =>
        if (stateEn = '1') then
          r_suif_tmp56 <= ni1586_suif_tmp56;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b20s34 =>
        if (stateEn = '1') then
          r_suif_tmp57 <= ni1590_suif_tmp57;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b20s34 =>
        if (stateEn = '1') then
          r_suif_tmp58 <= ni1593_suif_tmp58;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b20s38 =>
        if (stateEn = '1') then
          r_suif_tmp59 <= ni1596_suif_tmp59;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b20s41 =>
        if (stateEn = '1') then
          r_suif_tmp60 <= ni1599_suif_tmp60;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b22s1 =>
        if (stateEn = '1') then
          r_suif_tmp63 <= ni1606_suif_tmp63;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b23s0 =>
        if (stateEn = '1') then
          r_suif_tmp_6 <= ni1608_suif_tmp_6;
        end if;
      when b24s0 =>
        if (stateEn = '1') then
          r_suif_tmp_6 <= ni1609_suif_tmp_6;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b25s1 =>
        if (stateEn = '1') then
          r_suif_tmp64 <= ni1610_suif_tmp64;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b26s0 =>
        if (stateEn = '1') then
          r_suif_tmp0_2 <= ni1612_suif_tmp0_2;
        end if;
      when b27s0 =>
        if (stateEn = '1') then
          r_suif_tmp0_2 <= ni1613_suif_tmp0_2;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b28s1 =>
        if (stateEn = '1') then
          r_r_e_g_4 <= ni680_state;
        end if;
      when b34s1 =>
        if (stateEn = '1') then
          r_r_e_g_4 <= ni788_state;
        end if;
      when b40s1 =>
        if (stateEn = '1') then
          r_r_e_g_4 <= ni898_state;
        end if;
      when b46s1 =>
        if (stateEn = '1') then
          r_r_e_g_4 <= ni1016_state;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b28s2 =>
        if (stateEn = '1') then
          r_r_e_g_5 <= ni692_state;
        end if;
      when b34s2 =>
        if (stateEn = '1') then
          r_r_e_g_5 <= ni803_state;
        end if;
      when b40s2 =>
        if (stateEn = '1') then
          r_r_e_g_5 <= ni911_state;
        end if;
      when b46s2 =>
        if (stateEn = '1') then
          r_r_e_g_5 <= ni1026_state;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b28s2 =>
        if (stateEn = '1') then
          r_r_e_g_6 <= ni702_state;
        end if;
      when b34s2 =>
        if (stateEn = '1') then
          r_r_e_g_6 <= ni815_state;
        end if;
      when b40s2 =>
        if (stateEn = '1') then
          r_r_e_g_6 <= ni926_state;
        end if;
      when b46s2 =>
        if (stateEn = '1') then
          r_r_e_g_6 <= ni1036_state;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b28s3 =>
        if (stateEn = '1') then
          r_suif_tmp65 <= ni1620_suif_tmp65;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b29s0 =>
        if (stateEn = '1') then
          r_suif_tmp2_0 <= ni1622_suif_tmp2_0;
        end if;
      when b30s0 =>
        if (stateEn = '1') then
          r_suif_tmp2_0 <= ni1623_suif_tmp2_0;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b31s1 =>
        if (stateEn = '1') then
          r_suif_tmp66 <= ni1624_suif_tmp66;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b32s0 =>
        if (stateEn = '1') then
          r_suif_tmp3_0 <= ni1626_suif_tmp3_0;
        end if;
      when b33s0 =>
        if (stateEn = '1') then
          r_suif_tmp3_0 <= ni1627_suif_tmp3_0;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b34s3 =>
        if (stateEn = '1') then
          r_suif_tmp67 <= ni1634_suif_tmp67;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b35s0 =>
        if (stateEn = '1') then
          r_suif_tmp5_0 <= ni1636_suif_tmp5_0;
        end if;
      when b36s0 =>
        if (stateEn = '1') then
          r_suif_tmp5_0 <= ni1637_suif_tmp5_0;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b37s1 =>
        if (stateEn = '1') then
          r_suif_tmp68 <= ni1638_suif_tmp68;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b38s0 =>
        if (stateEn = '1') then
          r_suif_tmp6_0 <= ni1640_suif_tmp6_0;
        end if;
      when b39s0 =>
        if (stateEn = '1') then
          r_suif_tmp6_0 <= ni1641_suif_tmp6_0;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b40s3 =>
        if (stateEn = '1') then
          r_suif_tmp69 <= ni1648_suif_tmp69;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b41s0 =>
        if (stateEn = '1') then
          r_suif_tmp8_0 <= ni1650_suif_tmp8_0;
        end if;
      when b42s0 =>
        if (stateEn = '1') then
          r_suif_tmp8_0 <= ni1651_suif_tmp8_0;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b43s1 =>
        if (stateEn = '1') then
          r_suif_tmp70 <= ni1652_suif_tmp70;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b44s0 =>
        if (stateEn = '1') then
          r_suif_tmp9_0 <= ni1654_suif_tmp9_0;
        end if;
      when b45s0 =>
        if (stateEn = '1') then
          r_suif_tmp9_0 <= ni1655_suif_tmp9_0;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b46s0 =>
        if (stateEn = '1') then
          r_suif_tmp62 <= ni1605_suif_tmp62;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b46s0 =>
        if (stateEn = '1') then
          r_r_e_g_7 <= ni1039_r_e_g_7;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b46s0 =>
        if (stateEn = '1') then
          r_r_e_g_8 <= ni1052_r_e_g_8;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b46s0 =>
        if (stateEn = '1') then
          r_r_e_g_9 <= ni985_r_e_g_9;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b48s0 =>
        if (stateEn = '1') then
          r_suif_tmp72 <= ni1666_suif_tmp72;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b49s0 =>
        if (stateEn = '1') then
          r_suif_tmp_7 <= ni1667_suif_tmp_7;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b49s0 =>
        if (stateEn = '1') then
          r_suif_tmp0_3 <= ni1668_suif_tmp0_3;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b50s0 =>
        if (stateEn = '1') then
          r_suif_tmp73 <= ni1672_suif_tmp73;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b51s0 =>
        if (stateEn = '1') then
          r_suif_tmp71 <= ni1664_suif_tmp71;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b52s0 =>
        if (stateEn = '1') then
          r_suif_tmp74 <= ni1675_suif_tmp74;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b53s0 =>
        if (stateEn = '1') then
          r_suif_tmp_5 <= ni1676_suif_tmp_5;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b54s0 =>
        if (stateEn = '1') then
          r_suif_tmp76 <= ni1678_suif_tmp76;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b55s0 =>
        if (stateEn = '1') then
          r_suif_tmp_8 <= ni1679_suif_tmp_8;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b55s0 =>
        if (stateEn = '1') then
          r_suif_tmp0_4 <= ni1680_suif_tmp0_4;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b56s0 =>
        if (stateEn = '1') then
          r_suif_tmp_9 <= ni1681_suif_tmp_9;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b56s0 =>
        if (stateEn = '1') then
          r_suif_tmp77 <= ni1686_suif_tmp77;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b57s0 =>
        if (stateEn = '1') then
          r_suif_tmp75 <= ni1688_suif_tmp75;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b58s0 =>
        if (stateEn = '1') then
          r_suif_tmp44 <= ni1690_suif_tmp44;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b60s0 =>
        if (stateEn = '1') then
          r_suif_tmp79 <= ni1694_suif_tmp79;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b61s0 =>
        if (stateEn = '1') then
          r_suif_tmp_10 <= ni1695_suif_tmp_10;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b62s0 =>
        if (stateEn = '1') then
          r_suif_tmp80 <= ni1699_suif_tmp80;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b62s1 =>
        if (stateEn = '1') then
          r_suif_tmp81 <= ni1696_suif_tmp81;
        end if;
      when others =>
      end case;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      case thisState is
      when b63s0 =>
        if (stateEn = '1') then
          r_suif_tmp78 <= ni1692_suif_tmp78;
        end if;
      when others =>
      end case;
    end if;
  end process;

-- "AESinputSignal" interface signals
  r_AESinputSignal <= p_AESinputSignal_data;
  p_AESinputSignal_en <= 
    s_b0s0_en when thisState = b0s0 else
    s_b3s0_en when thisState = b3s0 else
    s_b13s0_en when thisState = b13s0 else
    '0';

-- "AESdataStream" interface signals
  process (clk)
  begin
    if (clk'event and clk='1') then
      if ((p_AESdataStream_en and p_AESdataStream_rdy) = '1') then
        r_AESdataStream <= p_AESdataStream_data;
      end if;
    end if;
  end process;

  p_AESdataStream_en <= 
    s_b1s0_en and not p_AESdataStream_eos when thisState = b1s0 else
    s_b3s0_en or not p_AESdataStream_eos when thisState = b3s0 else
    s_b4s0_en and not p_AESdataStream_eos when thisState = b4s0 else
    s_b8s0_en or not p_AESdataStream_eos when thisState = b8s0 else
    '0';

-- "AESoutputStream" interface signals
  p_AESoutputStream_en <= 
    s_b62s1_en when thisState = b62s1 else
    s_b64s0_en when thisState = b64s0 else
    '0';
  p_AESoutputStream_data <= ni1696_suif_tmp81;
  p_AESoutputStream_eos <= 
    '1' when thisState = b64s0 else
    '0';

-- "SBox" interface signals
  p_SBox_raddr <= 
    ni1551_suif_tmp45(7 downto 0) when thisState = b20s1 else
    ni1554_suif_tmp46(7 downto 0) when thisState = b20s4 else
    ni1557_suif_tmp47(7 downto 0) when thisState = b20s7 else
    ni1560_suif_tmp48(7 downto 0) when thisState = b20s10 else
    ni1563_suif_tmp49(7 downto 0) when thisState = b20s13 else
    r_suif_tmp50(7 downto 0) when thisState = b20s14 else
    ni1569_suif_tmp51(7 downto 0) when thisState = b20s17 else
    ni1572_suif_tmp52(7 downto 0) when thisState = b20s20 else
    ni1576_suif_tmp53(7 downto 0) when thisState = b20s24 else
    r_suif_tmp54(7 downto 0) when thisState = b20s25 else
    ni1583_suif_tmp55(7 downto 0) when thisState = b20s29 else
    r_suif_tmp56(7 downto 0) when thisState = b20s30 else
    ni1590_suif_tmp57(7 downto 0) when thisState = b20s34 else
    r_suif_tmp58(7 downto 0) when thisState = b20s35 else
    ni1596_suif_tmp59(7 downto 0) when thisState = b20s38 else
    ni1599_suif_tmp60(7 downto 0) when thisState = b20s41 else
    (others => 'X');
  p_SBox_re <= 
    newState when thisState = b20s2 else
    newState when thisState = b20s5 else
    newState when thisState = b20s8 else
    newState when thisState = b20s11 else
    newState when thisState = b20s14 else
    newState when thisState = b20s15 else
    newState when thisState = b20s18 else
    newState when thisState = b20s21 else
    newState when thisState = b20s25 else
    newState when thisState = b20s26 else
    newState when thisState = b20s30 else
    newState when thisState = b20s31 else
    newState when thisState = b20s35 else
    newState when thisState = b20s36 else
    newState when thisState = b20s39 else
    newState when thisState = b20s42 else
    '0';
  process (clk)
  begin
    if (clk'event and clk='1') then
      if (p_SBox_re = '1') then
        r_SBox <= p_SBox_din;
      end if;
    end if;
  end process;

  p_SBox_imm <= 
    p_SBox_din when newState = '1' else
    r_SBox;

-- "state" memory signals
  ram_0: AESproc_state_RAM
    port map (
      rst => reset, 
      clk => clk, 
      we => p_state_we, 
      addr => p_state_addr, 
      addr2 => p_state_addr2, 
      din => p_state_din, 
      dout => p_state_dout, 
      dout2 => p_state_dout2);

  p_state_addr <= 
    r_r_e_g_0 when thisState = b1s2 else
    r_r_e_g_3 when thisState = b16s1 else
    r_r_e_g_0 when thisState = b20s2 else
    r_r_e_g_0 when thisState = b20s5 else
    r_r_e_g_0 when thisState = b20s8 else
    r_r_e_g_0 when thisState = b20s11 else
    ni1567_r_e_g_2 when thisState = b20s12 else
    r_r_e_g_0 when thisState = b20s15 else
    r_r_e_g_0 when thisState = b20s18 else
    r_r_e_g_0 when thisState = b20s21 else
    r_r_e_g_0 when thisState = b20s22 else
    ni1580_r_e_g_2 when thisState = b20s23 else
    r_r_e_g_0 when thisState = b20s26 else
    r_r_e_g_0 when thisState = b20s27 else
    ni1587_r_e_g_2 when thisState = b20s28 else
    r_r_e_g_0 when thisState = b20s31 else
    r_r_e_g_0 when thisState = b20s32 else
    ni1594_r_e_g_2 when thisState = b20s33 else
    r_r_e_g_0 when thisState = b20s36 else
    r_r_e_g_0 when thisState = b20s39 else
    r_r_e_g_0 when thisState = b20s42 else
    r_r_e_g_0 when thisState = b20s43 else
    ni1616_r_e_g_2 when thisState = b28s0 else
    ni1618_r_e_g_2 when thisState = b28s1 else
    ni1621_r_e_g_3 when thisState = b28s2 else
    ni1630_r_e_g_2 when thisState = b34s0 else
    ni1632_r_e_g_2 when thisState = b34s1 else
    ni1635_r_e_g_3 when thisState = b34s2 else
    ni1644_r_e_g_2 when thisState = b40s0 else
    ni1646_r_e_g_2 when thisState = b40s1 else
    ni1649_r_e_g_3 when thisState = b40s2 else
    ni1658_r_e_g_2 when thisState = b46s0 else
    ni1660_r_e_g_2 when thisState = b46s1 else
    r_r_e_g_2 when thisState = b50s1 else
    r_r_e_g_2 when thisState = b56s1 else
    (others => 'X');
  p_state_re <= 
    newState when thisState = b20s13 else
    newState when thisState = b20s24 else
    newState when thisState = b20s29 else
    newState when thisState = b20s34 else
    newState when thisState = b28s1 else
    newState when thisState = b28s2 else
    newState when thisState = b28s3 else
    newState when thisState = b34s1 else
    newState when thisState = b34s2 else
    newState when thisState = b34s3 else
    newState when thisState = b40s1 else
    newState when thisState = b40s2 else
    newState when thisState = b40s3 else
    newState when thisState = b46s1 else
    newState when thisState = b46s2 else
    '0';
  p_state_re2 <= 
    newState when thisState = b16s1 else
    newState when thisState = b20s1 else
    newState when thisState = b20s4 else
    newState when thisState = b20s7 else
    newState when thisState = b20s10 else
    newState when thisState = b20s13 else
    newState when thisState = b20s17 else
    newState when thisState = b20s20 else
    newState when thisState = b20s24 else
    newState when thisState = b20s29 else
    newState when thisState = b20s34 else
    newState when thisState = b20s38 else
    newState when thisState = b20s41 else
    newState when thisState = b22s1 else
    newState when thisState = b25s1 else
    newState when thisState = b28s1 else
    newState when thisState = b28s2 else
    newState when thisState = b28s3 else
    newState when thisState = b31s1 else
    newState when thisState = b34s1 else
    newState when thisState = b34s2 else
    newState when thisState = b34s3 else
    newState when thisState = b37s1 else
    newState when thisState = b40s1 else
    newState when thisState = b40s2 else
    newState when thisState = b40s3 else
    newState when thisState = b43s1 else
    newState when thisState = b46s1 else
    newState when thisState = b46s2 else
    newState when thisState = b46s3 else
    newState when thisState = b56s1 else
    newState when thisState = b62s1 else
    '0';
  p_state_addr2 <= 
    ni1512_r_e_g_0 when thisState = b16s0 else
    ni1552_r_e_g_0 when thisState = b20s0 else
    ni1555_r_e_g_0 when thisState = b20s3 else
    ni1558_r_e_g_0 when thisState = b20s6 else
    ni1561_r_e_g_0 when thisState = b20s9 else
    ni1564_r_e_g_0 when thisState = b20s12 else
    ni1570_r_e_g_0 when thisState = b20s16 else
    ni1573_r_e_g_0 when thisState = b20s19 else
    ni1577_r_e_g_0 when thisState = b20s23 else
    ni1584_r_e_g_0 when thisState = b20s28 else
    ni1591_r_e_g_0 when thisState = b20s33 else
    ni1597_r_e_g_0 when thisState = b20s37 else
    ni1600_r_e_g_0 when thisState = b20s40 else
    ni1607_r_e_g_0 when thisState = b22s0 else
    ni1611_r_e_g_0 when thisState = b25s0 else
    ni1615_r_e_g_0 when thisState = b28s0 else
    ni1617_r_e_g_0 when thisState = b28s1 else
    ni1619_r_e_g_0 when thisState = b28s2 else
    ni1625_r_e_g_0 when thisState = b31s0 else
    ni1629_r_e_g_0 when thisState = b34s0 else
    ni1631_r_e_g_0 when thisState = b34s1 else
    ni1633_r_e_g_0 when thisState = b34s2 else
    ni1639_r_e_g_0 when thisState = b37s0 else
    ni1643_r_e_g_0 when thisState = b40s0 else
    ni1645_r_e_g_0 when thisState = b40s1 else
    ni1647_r_e_g_0 when thisState = b40s2 else
    ni1653_r_e_g_0 when thisState = b43s0 else
    ni1657_r_e_g_0 when thisState = b46s0 else
    ni1659_r_e_g_0 when thisState = b46s1 else
    ni1661_r_e_g_0 when thisState = b46s2 else
    ni1683_r_e_g_0 when thisState = b56s0 else
    ni1697_r_e_g_0 when thisState = b62s0 else
    (others => 'X');
  p_state_we <= 
    '1' when thisState = b1s2 else
    '1' when thisState = b16s1 else
    '1' when thisState = b20s2 else
    '1' when thisState = b20s5 else
    '1' when thisState = b20s8 else
    '1' when thisState = b20s11 else
    '1' when thisState = b20s15 else
    '1' when thisState = b20s18 else
    '1' when thisState = b20s21 else
    '1' when thisState = b20s22 else
    '1' when thisState = b20s26 else
    '1' when thisState = b20s27 else
    '1' when thisState = b20s31 else
    '1' when thisState = b20s32 else
    '1' when thisState = b20s36 else
    '1' when thisState = b20s39 else
    '1' when thisState = b20s42 else
    '1' when thisState = b20s43 else
    '1' when thisState = b50s1 else
    '1' when thisState = b56s1 else
    '0';
  p_state_din <= 
    r_streamByte when thisState = b1s2 else
    ni225_state when thisState = b16s1 else
    ni266_SBox when thisState = b20s2 else
    ni286_SBox when thisState = b20s5 else
    ni306_SBox when thisState = b20s8 else
    ni326_SBox when thisState = b20s11 else
    ni361_SBox when thisState = b20s15 else
    ni381_SBox when thisState = b20s18 else
    ni401_SBox when thisState = b20s21 else
    ni414_state when thisState = b20s22 else
    ni445_SBox when thisState = b20s26 else
    ni458_state when thisState = b20s27 else
    ni489_SBox when thisState = b20s31 else
    ni502_state when thisState = b20s32 else
    ni533_SBox when thisState = b20s36 else
    ni553_SBox when thisState = b20s39 else
    ni573_SBox when thisState = b20s42 else
    ni586_state when thisState = b20s43 else
    ni1082_stateTemp when thisState = b50s1 else
    ni1119_state when thisState = b56s1 else
    (others => 'X');
  process (clk)
  begin
    if (clk'event and clk='1') then
      if (p_state_re = '1') then
        r_state <= p_state_dout;
      end if;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      if (p_state_re2 = '1') then
        r2_state <= p_state_dout2;
      end if;
    end if;
  end process;

  p_state_imm <= 
    p_state_dout when newState = '1' else
    r_state;
  p_state_imm2 <= 
    p_state_dout2 when newState = '1' else
    r2_state;
-- "stateTemp" memory signals
  ram_1: AESproc_stateTemp_RAM
    port map (
      rst => reset, 
      clk => clk, 
      we => p_stateTemp_we, 
      addr => p_stateTemp_addr, 
      addr2 => p_stateTemp_addr2, 
      din => p_stateTemp_din, 
      dout => p_stateTemp_dout, 
      dout2 => p_stateTemp_dout2);

  p_stateTemp_addr <= 
    r_r_e_g_2 when thisState = b28s3 else
    r_r_e_g_2 when thisState = b34s3 else
    r_r_e_g_2 when thisState = b40s3 else
    r_r_e_g_2 when thisState = b46s3 else
    (others => 'X');
  p_stateTemp_re <= '0';
  p_stateTemp_re2 <= 
    newState when thisState = b50s1 else
    '0';
  p_stateTemp_addr2 <= ni1670_r_e_g_0;
  p_stateTemp_we <= 
    '1' when thisState = b28s3 else
    '1' when thisState = b34s3 else
    '1' when thisState = b40s3 else
    '1' when thisState = b46s3 else
    '0';
  p_stateTemp_din <= 
    ni642_stateTemp when thisState = b28s3 else
    ni755_stateTemp when thisState = b34s3 else
    ni868_stateTemp when thisState = b40s3 else
    ni981_stateTemp when thisState = b46s3 else
    (others => 'X');
  process (clk)
  begin
    if (clk'event and clk='1') then
      if (p_stateTemp_re = '1') then
        r_stateTemp <= p_stateTemp_dout;
      end if;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      if (p_stateTemp_re2 = '1') then
        r2_stateTemp <= p_stateTemp_dout2;
      end if;
    end if;
  end process;

  p_stateTemp_imm <= 
    p_stateTemp_dout when newState = '1' else
    r_stateTemp;
  p_stateTemp_imm2 <= 
    p_stateTemp_dout2 when newState = '1' else
    r2_stateTemp;
-- "expandedKey" memory signals
  ram_2: AESproc_expandedKey_RAM
    port map (
      rst => reset, 
      clk => clk, 
      we => p_expandedKey_we, 
      addr => p_expandedKey_addr, 
      addr2 => p_expandedKey_addr2, 
      din => p_expandedKey_din, 
      dout => p_expandedKey_dout, 
      dout2 => p_expandedKey_dout2);

  p_expandedKey_addr <= r_r_e_g_1;
  p_expandedKey_re <= '0';
  p_expandedKey_re2 <= 
    newState when thisState = b11s1 else
    newState when thisState = b56s1 else
    '0';
  p_expandedKey_addr2 <= 
    ni1499_r_e_g_1 when thisState = b11s0 else
    ni1684_r_e_g_1 when thisState = b56s0 else
    (others => 'X');
  p_expandedKey_we <= 
    '1' when thisState = b4s2 else
    '0';
  p_expandedKey_din <= r_streamByte;
  process (clk)
  begin
    if (clk'event and clk='1') then
      if (p_expandedKey_re = '1') then
        r_expandedKey <= p_expandedKey_dout;
      end if;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      if (p_expandedKey_re2 = '1') then
        r2_expandedKey <= p_expandedKey_dout2;
      end if;
    end if;
  end process;

  p_expandedKey_imm <= 
    p_expandedKey_dout when newState = '1' else
    r_expandedKey;
  p_expandedKey_imm2 <= 
    p_expandedKey_dout2 when newState = '1' else
    r2_expandedKey;
-- "key" memory signals
  ram_3: AESproc_key_RAM
    port map (
      rst => reset, 
      clk => clk, 
      we => p_key_we, 
      addr => p_key_addr, 
      addr2 => p_key_addr2, 
      din => p_key_din, 
      dout => p_key_dout, 
      dout2 => p_key_dout2);

  p_key_addr <= r_r_e_g_0;
  p_key_re <= '0';
  p_key_re2 <= 
    newState when thisState = b16s1 else
    '0';
  p_key_addr2 <= ni1513_r_e_g_2;
  p_key_we <= 
    '1' when thisState = b11s1 else
    '0';
  p_key_din <= ni172_key;
  process (clk)
  begin
    if (clk'event and clk='1') then
      if (p_key_re = '1') then
        r_key <= p_key_dout;
      end if;
    end if;
  end process;

  process (clk)
  begin
    if (clk'event and clk='1') then
      if (p_key_re2 = '1') then
        r2_key <= p_key_dout2;
      end if;
    end if;
  end process;

  p_key_imm <= 
    p_key_dout when newState = '1' else
    r_key;
  p_key_imm2 <= 
    p_key_dout2 when newState = '1' else
    r2_key;
end rtl;
