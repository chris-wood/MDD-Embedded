------------------------------------------------------------------------
-- DO NOT EDIT
-- This file was automatically generated by the Impulse C Compiler.
-- 
-- Impulse C is Copyright 2002-2011, Impulse Accelerated Technologies, Inc.
-- 
-- Stage Master is Copyright 2002-2011, Green Mountain Computing Systems, Inc.
-- 
-- All rights reserved.
------------------------------------------------------------------------

library ieee;
use ieee.std_logic_1164.all;

library impulse;
use impulse.components.all;

library impulse;
use impulse.mem_if_components.all;

entity BasicStream_arch is
  port (
    reset : in std_ulogic;
    sclk : in std_ulogic;
    clk : in std_ulogic;
    p_Producer_HWinput_en : in std_ulogic;
    p_Producer_HWinput_eos : in std_ulogic;
    p_Producer_HWinput_data : in std_ulogic_vector (0 to 0);
    p_Producer_HWinput_rdy : out std_ulogic;
    p_Consumer_HWoutput_en : in std_ulogic;
    p_Consumer_HWoutput_data : out std_ulogic_vector (0 to 0);
    p_Consumer_HWoutput_eos : out std_ulogic;
    p_Consumer_HWoutput_rdy : out std_ulogic);
end;

architecture structure of BasicStream_arch is
  component HWproc is
    port (
    reset : in std_ulogic;
    sclk : in std_ulogic;
    clk : in std_ulogic;
    p_HWinput_rdy : in std_ulogic;
    p_HWinput_en : inout std_ulogic;
    p_HWinput_eos : in std_ulogic;
    p_HWinput_data : in std_ulogic_vector (0 to 0);
    p_HWoutput_rdy : in std_ulogic;
    p_HWoutput_en : inout std_ulogic;
    p_HWoutput_eos : out std_ulogic;
    p_HWoutput_data : out std_ulogic_vector (0 to 0)
    );
  end component;

  signal p_HWproc_HWinput_rdy : std_ulogic;
  signal p_HWproc_HWinput_en : std_ulogic;
  signal p_HWproc_HWinput_eos : std_ulogic;
  signal p_HWproc_HWinput_data : std_ulogic_vector (0 to 0);
  signal p_HWproc_HWoutput_rdy : std_ulogic;
  signal p_HWproc_HWoutput_en : std_ulogic;
  signal p_HWproc_HWoutput_eos : std_ulogic;
  signal p_HWproc_HWoutput_data : std_ulogic_vector (0 to 0);
  signal local_reset : std_ulogic;
begin
  local_reset <= reset;

  HWproc0: HWproc
    port map (
      reset => local_reset,
      sclk => sclk,
      clk => clk,
      p_HWinput_rdy => p_HWproc_HWinput_rdy,
      p_HWinput_en => p_HWproc_HWinput_en,
      p_HWinput_eos => p_HWproc_HWinput_eos,
      p_HWinput_data => p_HWproc_HWinput_data,
      p_HWoutput_rdy => p_HWproc_HWoutput_rdy,
      p_HWoutput_en => p_HWproc_HWoutput_en,
      p_HWoutput_eos => p_HWproc_HWoutput_eos,
      p_HWoutput_data => p_HWproc_HWoutput_data
    );

  inst0: stream
    generic map (
      datawidth => 1,
      addrwidth => 1
    )
    port map (
      reset => local_reset,
      clk => clk,
      input_en => p_Producer_HWinput_en,
      input_rdy => p_Producer_HWinput_rdy,
      input_eos => p_Producer_HWinput_eos,
      input_data => p_Producer_HWinput_data,
      output_en => p_HWproc_HWinput_en,
      output_rdy => p_HWproc_HWinput_rdy,
      output_eos => p_HWproc_HWinput_eos,
      output_data => p_HWproc_HWinput_data
    );

  inst1: stream
    generic map (
      datawidth => 1,
      addrwidth => 1
    )
    port map (
      reset => local_reset,
      clk => clk,
      input_en => p_HWproc_HWoutput_en,
      input_rdy => p_HWproc_HWoutput_rdy,
      input_eos => p_HWproc_HWoutput_eos,
      input_data => p_HWproc_HWoutput_data,
      output_en => p_Consumer_HWoutput_en,
      output_rdy => p_Consumer_HWoutput_rdy,
      output_eos => p_Consumer_HWoutput_eos,
      output_data => p_Consumer_HWoutput_data
    );

end;
