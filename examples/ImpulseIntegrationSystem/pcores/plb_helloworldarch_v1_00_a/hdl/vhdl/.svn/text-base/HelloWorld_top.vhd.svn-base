------------------------------------------------------------------------
-- DO NOT EDIT
-- This file was automatically generated by the Impulse C Compiler.
-- 
-- Impulse C is Copyright 2002-2011, Impulse Accelerated Technologies, Inc.
-- 
-- Stage Master is Copyright 2002-2011, Green Mountain Computing Systems, Inc.
-- 
-- All rights reserved.
------------------------------------------------------------------------

library ieee;
use ieee.std_logic_1164.all;

library impulse;
use impulse.components.all;

library impulse;
use impulse.mem_if_components.all;

entity HelloWorldArch is
  port (
    reset : in std_ulogic;
    sclk : in std_ulogic;
    clk : in std_ulogic;
    p_Producer_output_stream_en : in std_ulogic;
    p_Producer_output_stream_eos : in std_ulogic;
    p_Producer_output_stream_data : in std_ulogic_vector (7 downto 0);
    p_Producer_output_stream_rdy : out std_ulogic;
    p_Consumer_input_stream_en : in std_ulogic;
    p_Consumer_input_stream_data : out std_ulogic_vector (7 downto 0);
    p_Consumer_input_stream_eos : out std_ulogic;
    p_Consumer_input_stream_rdy : out std_ulogic);
end;

architecture structure of HelloWorldArch is
  component DoText is
    port (
    reset : in std_ulogic;
    sclk : in std_ulogic;
    clk : in std_ulogic;
    p_input_stream_rdy : in std_ulogic;
    p_input_stream_en : inout std_ulogic;
    p_input_stream_eos : in std_ulogic;
    p_input_stream_data : in std_ulogic_vector (7 downto 0);
    p_output_stream_rdy : in std_ulogic;
    p_output_stream_en : inout std_ulogic;
    p_output_stream_eos : out std_ulogic;
    p_output_stream_data : out std_ulogic_vector (7 downto 0)
    );
  end component;

  signal p_DoText_input_stream_rdy : std_ulogic;
  signal p_DoText_input_stream_en : std_ulogic;
  signal p_DoText_input_stream_eos : std_ulogic;
  signal p_DoText_input_stream_data : std_ulogic_vector (7 downto 0);
  signal p_DoText_output_stream_rdy : std_ulogic;
  signal p_DoText_output_stream_en : std_ulogic;
  signal p_DoText_output_stream_eos : std_ulogic;
  signal p_DoText_output_stream_data : std_ulogic_vector (7 downto 0);
  signal local_reset : std_ulogic;
begin
  local_reset <= reset;

  DoText0: DoText
    port map (
      reset => local_reset,
      sclk => sclk,
      clk => clk,
      p_input_stream_rdy => p_DoText_input_stream_rdy,
      p_input_stream_en => p_DoText_input_stream_en,
      p_input_stream_eos => p_DoText_input_stream_eos,
      p_input_stream_data => p_DoText_input_stream_data,
      p_output_stream_rdy => p_DoText_output_stream_rdy,
      p_output_stream_en => p_DoText_output_stream_en,
      p_output_stream_eos => p_DoText_output_stream_eos,
      p_output_stream_data => p_DoText_output_stream_data
    );

  inst0: stream
    generic map (
      datawidth => 8,
      addrwidth => 1
    )
    port map (
      reset => local_reset,
      clk => clk,
      input_en => p_Producer_output_stream_en,
      input_rdy => p_Producer_output_stream_rdy,
      input_eos => p_Producer_output_stream_eos,
      input_data => p_Producer_output_stream_data,
      output_en => p_DoText_input_stream_en,
      output_rdy => p_DoText_input_stream_rdy,
      output_eos => p_DoText_input_stream_eos,
      output_data => p_DoText_input_stream_data
    );

  inst1: stream
    generic map (
      datawidth => 8,
      addrwidth => 1
    )
    port map (
      reset => local_reset,
      clk => clk,
      input_en => p_DoText_output_stream_en,
      input_rdy => p_DoText_output_stream_rdy,
      input_eos => p_DoText_output_stream_eos,
      input_data => p_DoText_output_stream_data,
      output_en => p_Consumer_input_stream_en,
      output_rdy => p_Consumer_input_stream_rdy,
      output_eos => p_Consumer_input_stream_eos,
      output_data => p_Consumer_input_stream_data
    );

end;
